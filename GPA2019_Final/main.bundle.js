!function(g){function r(r){for(var I,e,l=r[0],A=r[1],t=r[2],d=0,b=[];d<l.length;d++)e=l[d],Object.prototype.hasOwnProperty.call(C,e)&&C[e]&&b.push(C[e][0]),C[e]=0;for(I in A)Object.prototype.hasOwnProperty.call(A,I)&&(g[I]=A[I]);for(B&&B(r);b.length;)b.shift()();return c.push.apply(c,t||[]),n()}function n(){for(var g,r=0;r<c.length;r++){for(var n=c[r],I=!0,l=1;l<n.length;l++){var A=n[l];0!==C[A]&&(I=!1)}I&&(c.splice(r--,1),g=e(e.s=n[0]))}return g}var I={},C={0:0},c=[];function e(r){if(I[r])return I[r].exports;var n=I[r]={i:r,l:!1,exports:{}};return g[r].call(n.exports,n,n.exports,e),n.l=!0,n.exports}e.m=g,e.c=I,e.d=function(g,r,n){e.o(g,r)||Object.defineProperty(g,r,{enumerable:!0,get:n})},e.r=function(g){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(g,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(g,"__esModule",{value:!0})},e.t=function(g,r){if(1&r&&(g=e(g)),8&r)return g;if(4&r&&"object"==typeof g&&g&&g.__esModule)return g;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:g}),2&r&&"string"!=typeof g)for(var I in g)e.d(n,I,function(r){return g[r]}.bind(null,I));return n},e.n=function(g){var r=g&&g.__esModule?function(){return g.default}:function(){return g};return e.d(r,"a",r),r},e.o=function(g,r){return Object.prototype.hasOwnProperty.call(g,r)},e.p="";var l=window.webpackJsonp=window.webpackJsonp||[],A=l.push.bind(l);l.push=r,l=l.slice();for(var t=0;t<l.length;t++)r(l[t]);var B=A;c.push([4,1]),n()}([,,,function(module,exports){eval("module.exports = ImprovedNoise\r\n\r\n// http://mrl.nyu.edu/~perlin/noise/\r\n\r\nfunction ImprovedNoise() {\r\n\r\n\tvar p = [151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,\r\n\t\t 23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,\r\n\t\t 174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,\r\n\t\t 133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,\r\n\t\t 89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,\r\n\t\t 202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,\r\n\t\t 248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,\r\n\t\t 178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,\r\n\t\t 14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,\r\n\t\t 93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];\r\n\r\n\tfor (var i=0; i < 256 ; i++) {\r\n\r\n\t\tp[256+i] = p[i];\r\n\r\n\t}\r\n\r\n\tfunction fade(t) {\r\n\r\n\t\treturn t * t * t * (t * (t * 6 - 15) + 10);\r\n\r\n\t}\r\n\r\n\tfunction lerp(t, a, b) {\r\n\r\n\t\treturn a + t * (b - a);\r\n\r\n\t}\r\n\r\n\tfunction grad(hash, x, y, z) {\r\n\r\n\t\tvar h = hash & 15;\r\n\t\tvar u = h < 8 ? x : y, v = h < 4 ? y : h == 12 || h == 14 ? x : z;\r\n\t\treturn ((h&1) == 0 ? u : -u) + ((h&2) == 0 ? v : -v);\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tnoise: function (x, y, z) {\r\n\r\n\t\t\tvar floorX = Math.floor(x), floorY = Math.floor(y), floorZ = Math.floor(z);\r\n\r\n\t\t\tvar X = floorX & 255, Y = floorY & 255, Z = floorZ & 255;\r\n\r\n\t\t\tx -= floorX;\r\n\t\t\ty -= floorY;\r\n\t\t\tz -= floorZ;\r\n\r\n\t\t\tvar xMinus1 = x -1, yMinus1 = y - 1, zMinus1 = z - 1;\r\n\r\n\t\t\tvar u = fade(x), v = fade(y), w = fade(z);\r\n\r\n\t\t\tvar A = p[X]+Y, AA = p[A]+Z, AB = p[A+1]+Z, B = p[X+1]+Y, BA = p[B]+Z, BB = p[B+1]+Z;\r\n\r\n\t\t\treturn lerp(w, lerp(v, lerp(u, grad(p[AA], x, y, z), \r\n\t\t\t\t\t\t\tgrad(p[BA], xMinus1, y, z)),\r\n\t\t\t\t\t\tlerp(u, grad(p[AB], x, yMinus1, z),\r\n\t\t\t\t\t\t\tgrad(p[BB], xMinus1, yMinus1, z))),\r\n\t\t\t\t\tlerp(v, lerp(u, grad(p[AA+1], x, y, zMinus1),\r\n\t\t\t\t\t\t\tgrad(p[BA+1], xMinus1, y, z-1)),\r\n\t\t\t\t\t\tlerp(u, grad(p[AB+1], x, yMinus1, zMinus1),\r\n\t\t\t\t\t\t\tgrad(p[BB+1], xMinus1, yMinus1, zMinus1))));\r\n\r\n\t\t}\r\n\t}\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2ltcHJvdmVkLW5vaXNlLmpzPzIzYzEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBJbXByb3ZlZE5vaXNlXHJcblxyXG4vLyBodHRwOi8vbXJsLm55dS5lZHUvfnBlcmxpbi9ub2lzZS9cclxuXHJcbmZ1bmN0aW9uIEltcHJvdmVkTm9pc2UoKSB7XHJcblxyXG5cdHZhciBwID0gWzE1MSwxNjAsMTM3LDkxLDkwLDE1LDEzMSwxMywyMDEsOTUsOTYsNTMsMTk0LDIzMyw3LDIyNSwxNDAsMzYsMTAzLDMwLDY5LDE0Miw4LDk5LDM3LDI0MCwyMSwxMCxcclxuXHRcdCAyMywxOTAsNiwxNDgsMjQ3LDEyMCwyMzQsNzUsMCwyNiwxOTcsNjIsOTQsMjUyLDIxOSwyMDMsMTE3LDM1LDExLDMyLDU3LDE3NywzMyw4OCwyMzcsMTQ5LDU2LDg3LFxyXG5cdFx0IDE3NCwyMCwxMjUsMTM2LDE3MSwxNjgsNjgsMTc1LDc0LDE2NSw3MSwxMzQsMTM5LDQ4LDI3LDE2Niw3NywxNDYsMTU4LDIzMSw4MywxMTEsMjI5LDEyMiw2MCwyMTEsXHJcblx0XHQgMTMzLDIzMCwyMjAsMTA1LDkyLDQxLDU1LDQ2LDI0NSw0MCwyNDQsMTAyLDE0Myw1NCw2NSwyNSw2MywxNjEsMSwyMTYsODAsNzMsMjA5LDc2LDEzMiwxODcsMjA4LFxyXG5cdFx0IDg5LDE4LDE2OSwyMDAsMTk2LDEzNSwxMzAsMTE2LDE4OCwxNTksODYsMTY0LDEwMCwxMDksMTk4LDE3MywxODYsMyw2NCw1MiwyMTcsMjI2LDI1MCwxMjQsMTIzLDUsXHJcblx0XHQgMjAyLDM4LDE0NywxMTgsMTI2LDI1NSw4Miw4NSwyMTIsMjA3LDIwNiw1OSwyMjcsNDcsMTYsNTgsMTcsMTgyLDE4OSwyOCw0MiwyMjMsMTgzLDE3MCwyMTMsMTE5LFxyXG5cdFx0IDI0OCwxNTIsMiw0NCwxNTQsMTYzLDcwLDIyMSwxNTMsMTAxLDE1NSwxNjcsNDMsMTcyLDksMTI5LDIyLDM5LDI1MywxOSw5OCwxMDgsMTEwLDc5LDExMywyMjQsMjMyLFxyXG5cdFx0IDE3OCwxODUsMTEyLDEwNCwyMTgsMjQ2LDk3LDIyOCwyNTEsMzQsMjQyLDE5MywyMzgsMjEwLDE0NCwxMiwxOTEsMTc5LDE2MiwyNDEsODEsNTEsMTQ1LDIzNSwyNDksXHJcblx0XHQgMTQsMjM5LDEwNyw0OSwxOTIsMjE0LDMxLDE4MSwxOTksMTA2LDE1NywxODQsODQsMjA0LDE3NiwxMTUsMTIxLDUwLDQ1LDEyNyw0LDE1MCwyNTQsMTM4LDIzNiwyMDUsXHJcblx0XHQgOTMsMjIyLDExNCw2NywyOSwyNCw3MiwyNDMsMTQxLDEyOCwxOTUsNzgsNjYsMjE1LDYxLDE1NiwxODBdO1xyXG5cclxuXHRmb3IgKHZhciBpPTA7IGkgPCAyNTYgOyBpKyspIHtcclxuXHJcblx0XHRwWzI1NitpXSA9IHBbaV07XHJcblxyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gZmFkZSh0KSB7XHJcblxyXG5cdFx0cmV0dXJuIHQgKiB0ICogdCAqICh0ICogKHQgKiA2IC0gMTUpICsgMTApO1xyXG5cclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIGxlcnAodCwgYSwgYikge1xyXG5cclxuXHRcdHJldHVybiBhICsgdCAqIChiIC0gYSk7XHJcblxyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gZ3JhZChoYXNoLCB4LCB5LCB6KSB7XHJcblxyXG5cdFx0dmFyIGggPSBoYXNoICYgMTU7XHJcblx0XHR2YXIgdSA9IGggPCA4ID8geCA6IHksIHYgPSBoIDwgNCA/IHkgOiBoID09IDEyIHx8IGggPT0gMTQgPyB4IDogejtcclxuXHRcdHJldHVybiAoKGgmMSkgPT0gMCA/IHUgOiAtdSkgKyAoKGgmMikgPT0gMCA/IHYgOiAtdik7XHJcblxyXG5cdH1cclxuXHJcblx0cmV0dXJuIHtcclxuXHJcblx0XHRub2lzZTogZnVuY3Rpb24gKHgsIHksIHopIHtcclxuXHJcblx0XHRcdHZhciBmbG9vclggPSBNYXRoLmZsb29yKHgpLCBmbG9vclkgPSBNYXRoLmZsb29yKHkpLCBmbG9vclogPSBNYXRoLmZsb29yKHopO1xyXG5cclxuXHRcdFx0dmFyIFggPSBmbG9vclggJiAyNTUsIFkgPSBmbG9vclkgJiAyNTUsIFogPSBmbG9vclogJiAyNTU7XHJcblxyXG5cdFx0XHR4IC09IGZsb29yWDtcclxuXHRcdFx0eSAtPSBmbG9vclk7XHJcblx0XHRcdHogLT0gZmxvb3JaO1xyXG5cclxuXHRcdFx0dmFyIHhNaW51czEgPSB4IC0xLCB5TWludXMxID0geSAtIDEsIHpNaW51czEgPSB6IC0gMTtcclxuXHJcblx0XHRcdHZhciB1ID0gZmFkZSh4KSwgdiA9IGZhZGUoeSksIHcgPSBmYWRlKHopO1xyXG5cclxuXHRcdFx0dmFyIEEgPSBwW1hdK1ksIEFBID0gcFtBXStaLCBBQiA9IHBbQSsxXStaLCBCID0gcFtYKzFdK1ksIEJBID0gcFtCXStaLCBCQiA9IHBbQisxXStaO1xyXG5cclxuXHRcdFx0cmV0dXJuIGxlcnAodywgbGVycCh2LCBsZXJwKHUsIGdyYWQocFtBQV0sIHgsIHksIHopLCBcclxuXHRcdFx0XHRcdFx0XHRncmFkKHBbQkFdLCB4TWludXMxLCB5LCB6KSksXHJcblx0XHRcdFx0XHRcdGxlcnAodSwgZ3JhZChwW0FCXSwgeCwgeU1pbnVzMSwgeiksXHJcblx0XHRcdFx0XHRcdFx0Z3JhZChwW0JCXSwgeE1pbnVzMSwgeU1pbnVzMSwgeikpKSxcclxuXHRcdFx0XHRcdGxlcnAodiwgbGVycCh1LCBncmFkKHBbQUErMV0sIHgsIHksIHpNaW51czEpLFxyXG5cdFx0XHRcdFx0XHRcdGdyYWQocFtCQSsxXSwgeE1pbnVzMSwgeSwgei0xKSksXHJcblx0XHRcdFx0XHRcdGxlcnAodSwgZ3JhZChwW0FCKzFdLCB4LCB5TWludXMxLCB6TWludXMxKSxcclxuXHRcdFx0XHRcdFx0XHRncmFkKHBbQkIrMV0sIHhNaW51czEsIHlNaW51czEsIHpNaW51czEpKSkpO1xyXG5cclxuXHRcdH1cclxuXHR9XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ../node_modules/gl-matrix/esm/index.js + 10 modules\nvar esm = __webpack_require__(0);\n\n// EXTERNAL MODULE: ../node_modules/stats-js/build/stats.min.js\nvar stats_min = __webpack_require__(1);\n\n// EXTERNAL MODULE: ../node_modules/dat.gui/build/dat.gui.module.js\nvar dat_gui_module = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./improved-noise.js\nvar improved_noise = __webpack_require__(3);\n\n// CONCATENATED MODULE: ./terrain.js\n\r\n\r\nconst { vec3 } = __webpack_require__(0);\r\n\r\nvar minY = 0;\r\nvar worldWidth = 200, worldDepth = 200;\r\nvar terrain_data = generateHeight( worldWidth, worldDepth );\r\nvar light = 1.0;\r\nvar shadow = 0.7;\r\nvar shadow2 = 0.8;\r\n\r\nvar terrainObj = {\r\n    v: null,\r\n    vn: null,\r\n    vt: null,\r\n    idx: null,\r\n    vc: null,\r\n    mesh: null,\r\n    width: null,\r\n    depth: null,\r\n}\r\nvar waterObj = {\r\n    v: null,\r\n    vn: null,\r\n    vt: null,\r\n    idx: null,\r\n}\r\n\r\nfunction generateHeight( width, height ) {\r\n    var data = [], perlin = new improved_noise(),\r\n        size = width * height, quality = 2, z = Math.random() * 100;\r\n    for ( var j = 0; j < 4; j ++ ) {\r\n        if ( j == 0 ) for ( var i = 0; i < size; i ++ ) data[ i ] = 0;\r\n        for ( var i = 0; i < size; i ++ ) {\r\n            var x = i % width, y = ( i / width ) | 0;\r\n            data[ i ] += perlin.noise( x / quality, y / quality, z ) * quality;\r\n        }\r\n        quality *= 4;\r\n    }\r\n    minY = Math.min(...data) * 0.2 | 0;\r\n    console.log(minY);\r\n    return data;\r\n}\r\n\r\nfunction getY( x, z ) {\r\n    return ( terrain_data[ x * worldDepth + z ] * 0.2 ) | 0;\r\n}\r\n\r\nfunction generateTerrain() {\r\n    let pyv = [\r\n        0.0, 16.0, 16.0,\r\n        16.0, 16.0, 16.0,\r\n        16.0, 16.0, 0.0,\r\n        0.0, 16.0, 16.0,\r\n        16.0, 16.0, 0.0,\r\n        0.0, 16.0, 0.0,\r\n    ];\r\n    let pyv2 = [\r\n        0.0, 15.0, 16.0,\r\n        16.0, 15.0, 16.0,\r\n        16.0, 15.0, 0.0,\r\n        0.0, 15.0, 16.0,\r\n        16.0, 15.0, 0.0,\r\n        0.0, 15.0, 0.0,\r\n    ];\r\n    let pxv = [\r\n        16.0, 0.0, 16.0,\r\n        16.0, 0.0, 0.0,\r\n        16.0, 16.0, 0.0,\r\n        16.0, 0.0, 16.0,\r\n        16.0, 16.0, 0.0,\r\n        16.0, 16.0, 16.0,\r\n    ];\r\n    let pzv = [\r\n        0.0, 0.0, 16.0,\r\n        16.0, 0.0, 16.0,\r\n        16.0, 16.0, 16.0,\r\n        0.0, 0.0, 16.0,\r\n        16.0, 16.0, 16.0,\r\n        0.0, 16.0, 16.0,\r\n    ];\r\n    let nxv = [\r\n        0.0, 0.0, 0.0,\r\n        0.0, 0.0, 16.0,\r\n        0.0, 16.0, 16.0,\r\n        0.0, 0.0, 0.0,\r\n        0.0, 16.0, 16.0,\r\n        0.0, 16.0, 0.0,\r\n    ];\r\n    let nzv = [\r\n        16.0, 0.0, 0.0,\r\n        0.0, 0.0, 0.0,\r\n        0.0, 16.0, 0.0,\r\n        16.0, 0.0, 0.0,\r\n        0.0, 16.0, 0.0,\r\n        16.0, 16.0, 0.0,\r\n    ];\r\n\r\n\r\n    let pyvn = [\r\n        0.0, 1.0, 0.0,\r\n        0.0, 1.0, 0.0,\r\n        0.0, 1.0, 0.0,\r\n        0.0, 1.0, 0.0,\r\n        0.0, 1.0, 0.0,\r\n        0.0, 1.0, 0.0,\r\n    ];\r\n    let pxvn = [\r\n        1.0, 0.0, 0.0,\r\n        1.0, 0.0, 0.0,\r\n        1.0, 0.0, 0.0,\r\n        1.0, 0.0, 0.0,\r\n        1.0, 0.0, 0.0,\r\n        1.0, 0.0, 0.0,\r\n    ];\r\n    let pzvn = [\r\n        0.0, 0.0, 1.0,\r\n        0.0, 0.0, 1.0,\r\n        0.0, 0.0, 1.0,\r\n        0.0, 0.0, 1.0,\r\n        0.0, 0.0, 1.0,\r\n        0.0, 0.0, 1.0,\r\n    ];\r\n    let nxvn = [\r\n        -1.0, 0.0, 0.0,\r\n        -1.0, 0.0, 0.0,\r\n        -1.0, 0.0, 0.0,\r\n        -1.0, 0.0, 0.0,\r\n        -1.0, 0.0, 0.0,\r\n        -1.0, 0.0, 0.0,\r\n    ];\r\n    let nzvn = [\r\n        0.0, 0.0, -1.0,\r\n        0.0, 0.0, -1.0,\r\n        0.0, 0.0, -1.0,\r\n        0.0, 0.0, -1.0,\r\n        0.0, 0.0, -1.0,\r\n        0.0, 0.0, -1.0,\r\n    ];\r\n\r\n    let pyvt = [\r\n        0.0, 0.125,\r\n        1.0, 0.125,\r\n        1.0, 0.0,\r\n        0.0, 0.125,\r\n        1.0, 0.0,\r\n        0.0, 0.0,\r\n    ];\r\n    let pyvt2 = [\r\n        0.0, 1.0 / 32.0,\r\n        1.0, 1.0 / 32.0,\r\n        1.0, 0.0,\r\n        0.0, 1.0 / 32.0,\r\n        1.0, 0.0,\r\n        0.0, 0.0,\r\n    ];\r\n    let pxvt = [\r\n        0.0, 0.25,\r\n        1.0, 0.25,\r\n        1.0, 0.125,\r\n        0.0, 0.25,\r\n        1.0, 0.125,\r\n        0.0, 0.125,\r\n    ];\r\n    let sandvt = [\r\n        0.0, 0.625,\r\n        1.0, 0.625,\r\n        1.0, 0.5,\r\n        0.0, 0.625,\r\n        1.0, 0.5,\r\n        0.0, 0.5,\r\n    ];\r\n    let stonevt = [\r\n        0.0, 1.0,\r\n        1.0, 1.0,\r\n        1.0, 0.875,\r\n        0.0, 1.0,\r\n        1.0, 0.875,\r\n        0.0, 0.875,\r\n    ];\r\n    let idx = [\r\n        0, 1, 2,\r\n        3, 4, 5,\r\n    ];\r\n\r\n    let sidevc = [\r\n        shadow, shadow, light,\r\n        shadow, light, light,\r\n    ]\r\n\r\n    terrainObj.v = [];\r\n    terrainObj.vn = [];\r\n    terrainObj.vt = [];\r\n    terrainObj.idx = [];\r\n    terrainObj.vc = [];\r\n    terrainObj.mesh = [];\r\n    terrainObj.width = worldWidth;\r\n    terrainObj.depth = worldDepth;\r\n\r\n    waterObj.v = [];\r\n    waterObj.vn = [];\r\n    waterObj.vt = [];\r\n    waterObj.idx = [];\r\n\r\n    let index = 0;\r\n    let index2 = 0;\r\n    let level1 = 0;\r\n    let level0 = -10;\r\n\r\n    let vertices = [];\r\n\r\n    for(var x = 0; x < worldWidth; x++){\r\n        for(var z = 0; z < worldDepth; z++){\r\n            var h = getY(x, z);\r\n            var px = getY( x + 1, z );\r\n            var nx = getY( x - 1, z );\r\n            var pz = getY( x, z + 1 );\r\n            var nz = getY( x, z - 1 );\r\n            var pxpz = getY( x + 1, z + 1 );\r\n            var nxpz = getY( x - 1, z + 1 );\r\n            var pxnz = getY( x + 1, z - 1 );\r\n            var nxnz = getY( x - 1, z - 1 );\r\n            var a = nx > h || nz > h || nxnz > h ? shadow2 : light;\r\n            var b = nx > h || pz > h || nxpz > h ? shadow2 : light;\r\n            var c = px > h || pz > h || pxpz > h ? shadow2 : light;\r\n            var d = px > h || nz > h || pxnz > h ? shadow2 : light;\r\n\r\n            let topvc = [\r\n                b, c, d,\r\n                b, d, a,\r\n            ]\r\n\r\n            for(var i = 0; i < 6; i++){\r\n                let vx = pyv[i*3] + x * 16.0;\r\n                let vy = pyv[i*3+1] + h * 16.0;\r\n                let vz = pyv[i*3+2] + z * 16.0;\r\n                terrainObj.v.push(vx);\r\n                terrainObj.v.push(vy);\r\n                terrainObj.v.push(vz);\r\n\r\n                vertices.push(vec3.fromValues(vx, vy, vz));\r\n\r\n                terrainObj.vn.push(pyvn[i*3]);\r\n                terrainObj.vn.push(pyvn[i*3+1]);\r\n                terrainObj.vn.push(pyvn[i*3+2]);\r\n                \r\n                if(h > level1){\r\n                    terrainObj.vt.push(pyvt[i*2]);\r\n                    terrainObj.vt.push(pyvt[i*2+1]);\r\n                }else if(h > level0){\r\n                    terrainObj.vt.push(sandvt[i*2]);\r\n                    terrainObj.vt.push(sandvt[i*2+1]);\r\n                }else{\r\n                    terrainObj.vt.push(stonevt[i*2]);\r\n                    terrainObj.vt.push(stonevt[i*2+1]);\r\n                }\r\n\r\n                terrainObj.idx.push(i + index*6);\r\n\r\n                terrainObj.vc.push(topvc[i]);\r\n            }\r\n            index++;\r\n            \r\n            if(h < level1 - 2){\r\n                for(var i = 0; i < 6; i++){\r\n                    waterObj.v.push(pyv2[i*3] + x * 16.0);\r\n                    waterObj.v.push(pyv2[i*3+1] + (level1 - 2) * 16.0);\r\n                    waterObj.v.push(pyv2[i*3+2] + z * 16.0);\r\n    \r\n                    waterObj.vn.push(pyvn[i*3]);\r\n                    waterObj.vn.push(pyvn[i*3+1]);\r\n                    waterObj.vn.push(pyvn[i*3+2]);\r\n\r\n                    waterObj.vt.push(pyvt2[i*2]);\r\n                    waterObj.vt.push(pyvt2[i*2+1]);\r\n    \r\n                    waterObj.idx.push(i + index2*6);\r\n                }\r\n                index2++;\r\n            }\r\n\r\n            if(px < h){\r\n                sidevc[2] = pxnz == h ? shadow2 : light;\r\n                sidevc[4] = pxnz == h ? shadow2 : light;\r\n                sidevc[5] = pxpz == h ? shadow2 : light;\r\n                for(var i = 0; i < 6; i++){\r\n                    terrainObj.v.push(pxv[i*3] + x * 16.0);\r\n                    terrainObj.v.push(pxv[i*3+1] + h * 16.0);\r\n                    terrainObj.v.push(pxv[i*3+2] + z * 16.0);\r\n    \r\n                    terrainObj.vn.push(pxvn[i*3]);\r\n                    terrainObj.vn.push(pxvn[i*3+1]);\r\n                    terrainObj.vn.push(pxvn[i*3+2]);\r\n                    \r\n                    if(h > level1){\r\n                        terrainObj.vt.push(pxvt[i*2]);\r\n                        terrainObj.vt.push(pxvt[i*2+1]);\r\n                    }else if(h > level0){\r\n                        terrainObj.vt.push(sandvt[i*2]);\r\n                        terrainObj.vt.push(sandvt[i*2+1]);\r\n                    }else{\r\n                        terrainObj.vt.push(stonevt[i*2]);\r\n                        terrainObj.vt.push(stonevt[i*2+1]);\r\n                    }\r\n    \r\n                    terrainObj.idx.push(i + index*6);\r\n                    \r\n                    terrainObj.vc.push(sidevc[i]);\r\n                }\r\n                index++;\r\n            }\r\n            if(pz < h){\r\n                sidevc[2] = pxpz == h ? shadow2 : light;\r\n                sidevc[4] = pxpz == h ? shadow2 : light;\r\n                sidevc[5] = nxpz == h ? shadow2 : light;\r\n                for(var i = 0; i < 6; i++){\r\n                    terrainObj.v.push(pzv[i*3] + x * 16.0);\r\n                    terrainObj.v.push(pzv[i*3+1] + h * 16.0);\r\n                    terrainObj.v.push(pzv[i*3+2] + z * 16.0);\r\n    \r\n                    terrainObj.vn.push(pzvn[i*3]);\r\n                    terrainObj.vn.push(pzvn[i*3+1]);\r\n                    terrainObj.vn.push(pzvn[i*3+2]);\r\n    \r\n                    if(h > level1){\r\n                        terrainObj.vt.push(pxvt[i*2]);\r\n                        terrainObj.vt.push(pxvt[i*2+1]);\r\n                    }else if(h > level0){\r\n                        terrainObj.vt.push(sandvt[i*2]);\r\n                        terrainObj.vt.push(sandvt[i*2+1]);\r\n                    }else{\r\n                        terrainObj.vt.push(stonevt[i*2]);\r\n                        terrainObj.vt.push(stonevt[i*2+1]);\r\n                    }\r\n    \r\n                    terrainObj.idx.push(i + index*6);\r\n                    \r\n                    terrainObj.vc.push(sidevc[i]);\r\n                }\r\n                index++;\r\n            }\r\n            if(nx < h){\r\n                sidevc[2] = nxpz == h ? shadow2 : light;\r\n                sidevc[4] = nxpz == h ? shadow2 : light;\r\n                sidevc[5] = nxnz == h ? shadow2 : light;\r\n                for(var i = 0; i < 6; i++){\r\n                    terrainObj.v.push(nxv[i*3] + x * 16.0);\r\n                    terrainObj.v.push(nxv[i*3+1] + h * 16.0);\r\n                    terrainObj.v.push(nxv[i*3+2] + z * 16.0);\r\n    \r\n                    terrainObj.vn.push(nxvn[i*3]);\r\n                    terrainObj.vn.push(nxvn[i*3+1]);\r\n                    terrainObj.vn.push(nxvn[i*3+2]);\r\n    \r\n                    if(h > level1){\r\n                        terrainObj.vt.push(pxvt[i*2]);\r\n                        terrainObj.vt.push(pxvt[i*2+1]);\r\n                    }else if(h > level0){\r\n                        terrainObj.vt.push(sandvt[i*2]);\r\n                        terrainObj.vt.push(sandvt[i*2+1]);\r\n                    }else{\r\n                        terrainObj.vt.push(stonevt[i*2]);\r\n                        terrainObj.vt.push(stonevt[i*2+1]);\r\n                    }\r\n    \r\n                    terrainObj.idx.push(i + index*6);\r\n                    \r\n                    terrainObj.vc.push(sidevc[i]);\r\n                }\r\n                index++;\r\n            }\r\n            if(nz < h){\r\n                sidevc[2] = nxnz == h ? shadow2 : light;\r\n                sidevc[4] = nxnz == h ? shadow2 : light;\r\n                sidevc[5] = pxnz == h ? shadow2 : light;\r\n                for(var i = 0; i < 6; i++){\r\n                    terrainObj.v.push(nzv[i*3] + x * 16.0);\r\n                    terrainObj.v.push(nzv[i*3+1] + h * 16.0);\r\n                    terrainObj.v.push(nzv[i*3+2] + z * 16.0);\r\n    \r\n                    terrainObj.vn.push(nzvn[i*3]);\r\n                    terrainObj.vn.push(nzvn[i*3+1]);\r\n                    terrainObj.vn.push(nzvn[i*3+2]);\r\n    \r\n                    if(h > level1){\r\n                        terrainObj.vt.push(pxvt[i*2]);\r\n                        terrainObj.vt.push(pxvt[i*2+1]);\r\n                    }else if(h > level0){\r\n                        terrainObj.vt.push(sandvt[i*2]);\r\n                        terrainObj.vt.push(sandvt[i*2+1]);\r\n                    }else{\r\n                        terrainObj.vt.push(stonevt[i*2]);\r\n                        terrainObj.vt.push(stonevt[i*2+1]);\r\n                    }\r\n    \r\n                    terrainObj.idx.push(i + index*6);\r\n                    \r\n                    terrainObj.vc.push(sidevc[i]);\r\n                }\r\n                index++;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // add bound mesh\r\n    let worldWidthSize = worldWidth * 16.0;\r\n    let worldDepthSize = worldDepth * 16.0;\r\n\r\n    console.log(terrainObj.v);\r\n\r\n    terrainObj.v.push(           0.0, minY * 16.0,            0.0);\r\n    terrainObj.v.push(worldWidthSize, minY * 16.0,            0.0);\r\n    terrainObj.v.push(worldWidthSize,       -17.0,            0.0);\r\n    terrainObj.v.push(           0.0, minY * 16.0,            0.0);\r\n    terrainObj.v.push(worldWidthSize,       -17.0,            0.0);\r\n    terrainObj.v.push(           0.0,       -17.0,            0.0);\r\n\r\n    for(let i=0; i<6; i++){\r\n        terrainObj.vn.push(pzvn[i*3]);\r\n        terrainObj.vn.push(pzvn[i*3+1])\r\n        terrainObj.vn.push(pzvn[i*3+2]);\r\n\r\n        terrainObj.vt.push(0.0, 0.0);\r\n        \r\n        terrainObj.idx.push(i + index*6);\r\n    }\r\n    index++;\r\n\r\n    terrainObj.v.push(worldWidthSize, minY * 16.0, worldDepthSize);\r\n    terrainObj.v.push(           0.0, minY * 16.0, worldDepthSize);\r\n    terrainObj.v.push(           0.0,       -17.0, worldDepthSize);\r\n    terrainObj.v.push(worldWidthSize, minY * 16.0, worldDepthSize);\r\n    terrainObj.v.push(           0.0,       -17.0, worldDepthSize);\r\n    terrainObj.v.push(worldWidthSize,       -17.0, worldDepthSize);\r\n\r\n    for(let i=0; i<6; i++){\r\n        terrainObj.vn.push(nzvn[i*3]);\r\n        terrainObj.vn.push(nzvn[i*3+1])\r\n        terrainObj.vn.push(nzvn[i*3+2]);\r\n\r\n        terrainObj.vt.push(0.0, 0.0);\r\n        \r\n        terrainObj.idx.push(i + index*6);\r\n    }\r\n    index++;\r\n\r\n    terrainObj.v.push(           0.0, minY * 16.0, worldDepthSize);\r\n    terrainObj.v.push(           0.0, minY * 16.0,            0.0);\r\n    terrainObj.v.push(           0.0,       -17.0,            0.0);\r\n    terrainObj.v.push(           0.0, minY * 16.0, worldDepthSize);\r\n    terrainObj.v.push(           0.0,       -17.0,            0.0);\r\n    terrainObj.v.push(           0.0,       -17.0, worldDepthSize);\r\n\r\n    for(let i=0; i<6; i++){\r\n        terrainObj.vn.push(pxvn[i*3]);\r\n        terrainObj.vn.push(pxvn[i*3+1])\r\n        terrainObj.vn.push(pxvn[i*3+2]);\r\n\r\n        terrainObj.vt.push(0.0, 0.0);\r\n        \r\n        terrainObj.idx.push(i + index*6);\r\n    }\r\n    index++;\r\n\r\n    terrainObj.v.push(worldWidthSize, minY * 16.0,            0.0);\r\n    terrainObj.v.push(worldWidthSize, minY * 16.0, worldDepthSize);\r\n    terrainObj.v.push(worldWidthSize,       -17.0, worldDepthSize);\r\n    terrainObj.v.push(worldWidthSize, minY * 16.0,            0.0);\r\n    terrainObj.v.push(worldWidthSize,       -17.0, worldDepthSize);\r\n    terrainObj.v.push(worldWidthSize,       -17.0,            0.0);\r\n\r\n    for(let i=0; i<6; i++){\r\n        terrainObj.vn.push(nxvn[i*3]);\r\n        terrainObj.vn.push(nxvn[i*3+1])\r\n        terrainObj.vn.push(nxvn[i*3+2]);\r\n\r\n        terrainObj.vt.push(0.0, 0.0);\r\n        \r\n        terrainObj.idx.push(i + index*6);\r\n    }\r\n    index++;\r\n\r\n    console.log(terrainObj.v);\r\n\r\n    // triangle for raycast\r\n    for(let i = 0; i < vertices.length / 3.0; i++){\r\n        let triangle = [];\r\n        triangle.push(vertices[i*3+0]);\r\n        triangle.push(vertices[i*3+1]);\r\n        triangle.push(vertices[i*3+2]);\r\n        terrainObj.mesh.push(triangle);\r\n    }\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./raycast.js\n\r\n\r\n/**\r\n * Ray triangle intersection algorithm \r\n * \r\n * @param rayOrigin ray origin point\r\n * @param rayVector ray direction\r\n * @param triangle three points of triangle, should be ccw order\r\n * @param out the intersection point\r\n * @return intersects or not\r\n * \r\n * Uses Möller–Trumbore intersection algorithm\r\n */\r\n\r\n// raycast\r\nfunction checkGround (origin, direction, length, obj) {\r\n    let x = Math.floor(origin[0] / 16.0);\r\n    let z = Math.floor(origin[2] / 16.0);\r\n    let idx0 = x * obj.depth * 2 + z * 2;\r\n    let idx1 = x * obj.depth * 2 + z * 2 + 1;\r\n    \r\n    if(obj.mesh[idx0] == undefined || obj.mesh[idx1] == undefined) return false;\r\n    \r\n    let ground = \r\n        checkIntersect(origin, direction, length, obj.mesh[idx0][0], obj.mesh[idx0][1], obj.mesh[idx0][2]) ||\r\n        checkIntersect(origin, direction, length, obj.mesh[idx1][0], obj.mesh[idx1][1], obj.mesh[idx1][2]);\r\n    if(ground == true) return true;\r\n    \r\n    return false;\r\n}\r\n\r\nfunction checkIntersect (origin, direction, length, v0, v1, v2) {\r\n    const eps = 0.0000001;\r\n    const edge1 = esm["vec3"].create();\r\n    const edge2 = esm["vec3"].create();\r\n    const h = esm["vec3"].create();\r\n\r\n    esm["vec3"].sub(edge1, v1, v0);\r\n    esm["vec3"].sub(edge2, v2, v0);\r\n    esm["vec3"].cross(h, direction, edge2);\r\n    const a = esm["vec3"].dot(edge1, h);\r\n\r\n    if(a > -eps && a < eps) {\r\n        return false;\r\n    }\r\n\r\n    const s = esm["vec3"].create();\r\n    esm["vec3"].sub(s, origin, v0);\r\n    const u = esm["vec3"].dot(s, h);\r\n\r\n\r\n    if (u < 0 || u > a) {\r\n        return false;\r\n    }\r\n\r\n    const q = esm["vec3"].create();\r\n    esm["vec3"].cross(q, s, edge1);\r\n    const v = esm["vec3"].dot(direction, q);\r\n\r\n    if (v < 0 || u + v > a) {\r\n        return false;\r\n    }\r\n\r\n    const t = esm["vec3"].dot(edge2, q) / a;\r\n    // console.log(t);\r\n    if (t > eps && t <= length) {\r\n        // if (out) {\r\n        //     vec3.add(out, origin, [direction[0] * t, direction[1] * t, direction[2] * t]);\r\n        //     // console.log(out);\r\n        // }\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n// unused\r\n// function projectTo3D (screencoord, viewport, invProjection, invView) {\r\n//     const [left, top, width, height] = viewport;\r\n//     const [x, y] = screenCoord;\r\n\r\n//     const out = vec4.fromValues(\r\n//         (2 * x) / width - 1 - left,\r\n//         (2 * (height - y - 1)) / height - 1,\r\n//         1,\r\n//         1,\r\n//     );\r\n\r\n//     vec4.transformMat4(out, out, invProjection);\r\n//     out[3] = 0;\r\n//     vec4.transformMat4(out, out, invView);\r\n//     return vec3.normalize(vec3.create(), out);\r\n// }\n// CONCATENATED MODULE: ./skybox.js\n\r\nvar skybox = {\r\n    view_Location: null,\r\n    project_Location: null,\r\n\r\n    tex_cubemap: null,\r\n\r\n    tex_cubemap_path: null,\r\n    tex_cubemap_width: null,\r\n    tex_cubemap_height: null,\r\n}\r\n\r\n\r\nfunction skyboxInit(gl) {\r\n    skybox.tex_cubemap_path = [];\r\n    // skybox.tex_cubemap_path.push(\'./asset/skybox/StarSkybox0412.png\');\r\n    // skybox.tex_cubemap_path.push(\'./asset/skybox/StarSkybox0422.png\');\r\n    // skybox.tex_cubemap_path.push(\'./asset/skybox/StarSkybox0432.png\');\r\n    // skybox.tex_cubemap_path.push(\'./asset/skybox/StarSkybox0442.png\');\r\n    // skybox.tex_cubemap_path.push(\'./asset/skybox/StarSkybox0452.png\');\r\n    // skybox.tex_cubemap_path.push(\'./asset/skybox/StarSkybox0462.png\');\r\n    // skybox.tex_cubemap_path.push(\'./asset/skybox/px.png\');\r\n    // skybox.tex_cubemap_path.push(\'./asset/skybox/nx.png\');\r\n    // skybox.tex_cubemap_path.push(\'./asset/skybox/py.png\');\r\n    // skybox.tex_cubemap_path.push(\'./asset/skybox/ny.png\');\r\n    // skybox.tex_cubemap_path.push(\'./asset/skybox/pz.png\');\r\n    // skybox.tex_cubemap_path.push(\'./asset/skybox/nz.png\');\r\n\r\n    skybox.tex_cubemap_path.push(\'./asset/skybox/px.png\');\r\n    skybox.tex_cubemap_path.push(\'./asset/skybox/nx.png\');\r\n    skybox.tex_cubemap_path.push(\'./asset/skybox/nz.png\');\r\n    skybox.tex_cubemap_path.push(\'./asset/skybox/pz.png\');\r\n    skybox.tex_cubemap_path.push(\'./asset/skybox/py.png\');\r\n    skybox.tex_cubemap_path.push(\'./asset/skybox/ny.png\');\r\n\r\n    skybox.tex_cubemap_width = 2048;\r\n    skybox.tex_cubemap_height = 2048;\r\n}\r\n\r\n\r\nfunction createSkyboxTexture(gl, tex) {\r\n\r\n    skybox.tex_cubemap = gl.createTexture();\r\n\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, skybox.tex_cubemap);\r\n\r\n\r\n    for (let i = 0; i < 6; ++i) {\r\n        gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, gl.RGB, skybox.tex_cubemap_width, skybox.tex_cubemap_height, 0, gl.RGB, gl.UNSIGNED_BYTE, tex[i]);\r\n    }\r\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\r\n}\n// CONCATENATED MODULE: ./skylight.js\n\r\n\r\n\r\n\r\n\r\nvar skylight = {\r\n    eye: null,      // position\r\n    eyeToCamera: null,\r\n    base_eyeToCamera: null,\r\n    rot_mat: null,\r\n\r\n    pointLookat: null,\r\n    up: null,\r\n    near: null,\r\n    far: null,\r\n\r\n    range: null,\r\n\r\n    time: null,\r\n    // program time 0.1 seconds = 1 Unit = game time 0.1 minute\r\n    timeUnit: null,\r\n\r\n    //for cloud move\r\n    iTime: null,\r\n\r\n    bias: null,\r\n\r\n    color: null,\r\n\r\n    atmVao: null,\r\n    atmProgram: null,\r\n    uSunPosLocation: null,\r\n    view_Location: null,\r\n    project_Location: null,\r\n\r\n    tex_noise: null,\r\n\r\n\r\n    clouds: true,\r\n    light_scattering: true,\r\n    cloud_density: 0.03,\r\n    cloud_height: 1600.0,\r\n    cloud_thickness: 500.0,\r\n    time_pause: false,\r\n\r\n    usePreCalSunColor: true,\r\n\r\n    gamma_correction: 1.6,\r\n};\r\n\r\n\r\n\r\n\r\n////  x:E  z:N\r\n\r\nfunction skylightInit(gl, gui, global) {\r\n//-1496000000000\r\n    skylight.base_eyeToCamera = esm["vec3"].fromValues(0, -6000, 0);\r\n    skylight.rot_mat = esm["mat4"].create();\r\n    esm["mat4"].rotateX(skylight.rot_mat, skylight.rot_mat, Math.PI * 23.5 / 180.0);\r\n\r\n\r\n    skylight.time = 12.0;\r\n    skylight.timeUnit = 0.1 / 60.0;\r\n    skylight.iTime = 0.0;\r\n\r\n    skylight.eyeToCamera = esm["vec3"].create();\r\n\r\n    calculatePosition();\r\n\r\n\r\n    skylight.eye = esm["vec3"].create();\r\n    esm["vec3"].add(skylight.eye, camera.eye, skylight.eyeToCamera);\r\n    skylight.pointLookat = camera.eye;\r\n    skylight.up = esm["vec3"].fromValues(0, 1, 0);\r\n\r\n\r\n    skylight.range = 3000;\r\n    skylight.near = 0.1;\r\n    skylight.far = 12000;\r\n\r\n\r\n    // skylight.bias = 1.0004;\r\n    skylight.bias = 1.0001499999999983;\r\n\r\n\r\n\r\n    let skFolder = gui.addFolder(\'Skylight\');\r\n\r\n    let ui = skFolder.add(skylight, \'time\', 0.00, 23.99).listen();\r\n    ui.onChange((val) => {\r\n        setSkylightTime(val);\r\n    });\r\n    \r\n    skFolder.add(skylight, "time_pause");\r\n    skFolder.add(skylight, "clouds").onChange((val) => {\r\n        gl.useProgram(skylight.atmProgram);\r\n        gl.uniform1i(gl.getUniformLocation(skylight.atmProgram, "isCloud"), val);\r\n\r\n    });\r\n    skFolder.add(skylight, "cloud_density", 0.00, 0.04).onChange((val) => {\r\n        gl.useProgram(skylight.atmProgram);\r\n        gl.uniform1f(gl.getUniformLocation(skylight.atmProgram, "cloudDensity"), val);\r\n    });\r\n    skFolder.add(skylight, "cloud_height", 1000.00, 5000.0).onChange((val) => {\r\n        gl.useProgram(skylight.atmProgram);\r\n        gl.uniform1f(gl.getUniformLocation(skylight.atmProgram, "cloudHeight"), val);\r\n    });\r\n    skFolder.add(skylight, "cloud_thickness", 0.00, 1500.0).onChange((val) => {\r\n        gl.useProgram(skylight.atmProgram);\r\n        gl.uniform1f(gl.getUniformLocation(skylight.atmProgram, "cloudThickness"), val);\r\n    });\r\n\r\n    skFolder.add(skylight, "light_scattering").onChange((val) => {\r\n        gl.useProgram(skylight.atmProgram);\r\n        gl.uniform1i(gl.getUniformLocation(skylight.atmProgram, "isLightScattering"), val);\r\n    });\r\n    skFolder.add(skylight, "usePreCalSunColor").onChange((val) => {\r\n        gl.useProgram(global.program);\r\n        gl.uniform1i(gl.getUniformLocation(global.program, "usePreCalSunColor"), val);\r\n    });\r\n    skFolder.add(skylight, "gamma_correction", 1.0, 2.5).onChange((val) => {\r\n        gl.useProgram(skylight.atmProgram);\r\n        gl.uniform1f(gl.getUniformLocation(skylight.atmProgram, "gammaCor"), val);\r\n    });\r\n    skFolder.open();\r\n\r\n    \r\n    \r\n\r\n    createAtmosphere(gl, global);\r\n}\r\n\r\nfunction setSkylightTime(time) {\r\n\r\n    skylight.time = (time >= 24.0) ? time - 24.0 : time;\r\n    skylight.iTime = time;\r\n    skylightMove();\r\n}\r\n\r\nfunction addSkylightTime(addtime) {\r\n\r\n    let tmp = addtime * skylight.timeUnit;\r\n    skylight.time = (skylight.time + tmp >= 24.0) ? skylight.time + tmp - 24.0 : skylight.time + tmp;\r\n\r\n    skylight.iTime += tmp;\r\n    skylightMove();\r\n}\r\n\r\nfunction skylightMove() {\r\n\r\n    calculatePosition();\r\n\r\n    esm["vec3"].add(skylight.eye, camera.eye, skylight.eyeToCamera);\r\n\r\n    csm();\r\n}\r\n\r\nfunction calculatePosition() {\r\n\r\n    setLightColor();\r\n\r\n    //  0 12 24\r\n    // +0 +12- -0\r\n    let rotTime = skylight.time;\r\n    if(skylight.time>=12.0){\r\n        rotTime = skylight.time-24.0;\r\n    }\r\n\r\n    let tmprot = esm["mat4"].create();\r\n    esm["mat4"].rotateZ(tmprot, tmprot, Math.PI * (rotTime / 24.0) * 360 / 180.0);\r\n    let a = esm["mat4"].create();\r\n    esm["mat4"].multiply(a, tmprot, skylight.rot_mat);\r\n    esm["mat4"].rotateY(tmprot, esm["mat4"].create(), Math.PI * (rotTime / 24.0) / 180.0);\r\n    esm["mat4"].multiply(a, tmprot, a);\r\n\r\n\r\n    let b = skylight.base_eyeToCamera[0] * a[0] + skylight.base_eyeToCamera[1] * a[1] + skylight.base_eyeToCamera[2] * a[2] + 1.0 * a[3];\r\n    let c = skylight.base_eyeToCamera[0] * a[4] + skylight.base_eyeToCamera[1] * a[5] + skylight.base_eyeToCamera[2] * a[6] + 1.0 * a[7];\r\n    let d = skylight.base_eyeToCamera[0] * a[8] + skylight.base_eyeToCamera[1] * a[9] + skylight.base_eyeToCamera[2] * a[10] + 1.0 * a[11];\r\n    skylight.eyeToCamera = esm["vec3"].fromValues(b, c, d);\r\n}\r\n\r\nfunction setLightColor() {    \r\n    if (skylight.time >= 6.5 && skylight.time <= 12) {\r\n        let temp = (3200 - 10000) * (skylight.time - 12) / (6.5 - 12) + 10000;\r\n        skylight.color = tempToColor(temp);\r\n    } else if (skylight.time >= 12 && skylight.time <= 17.5) {\r\n        let temp = (3200 - 10000) * (skylight.time - 12) / (17.5 - 12) + 10000;\r\n        skylight.color = tempToColor(temp);\r\n    } else if (skylight.time >= 17.5 && skylight.time <= 18) {\r\n        let tmpcolor = tempToColor(3200);\r\n        esm["vec3"].lerp(skylight.color, [0, 0, 0], tmpcolor, (18 - skylight.time) / (18 - 17.5));\r\n    } else if (skylight.time >= 6 && skylight.time <= 6.5) {\r\n        let tmpcolor = tempToColor(3200);\r\n        esm["vec3"].lerp(skylight.color, tmpcolor, [0, 0, 0], (skylight.time - 6.5) / (6 - 6.5));\r\n    } else {\r\n        skylight.color = esm["vec3"].fromValues(0, 0, 0);\r\n    }\r\n}\r\n\r\n// calculate color by temperature(K)\r\nfunction tempToColor(Temperature) {\r\n\r\n    // sunrise sunset 3200 K\r\n    // noon 10000 K\r\n\r\n    let r;\r\n    let g;\r\n    let b;\r\n\r\n    Temperature = Temperature / 100;\r\n\r\n    // Calculate Red:\r\n    if (Temperature <= 66) {\r\n        r = 255;\r\n    } else {\r\n        r = Temperature - 60;\r\n        r = 329.698727446 * Math.pow(r, -0.1332047592);\r\n        if (r < 0) r = 0;\r\n        if (r > 255) r = 255;\r\n    }\r\n\r\n    // Calculate Green:\r\n    if (Temperature <= 66) {\r\n        g = Temperature;\r\n        g = 99.4708025861 * Math.log(g) - 161.1195681661;\r\n        if (g < 0) g = 0;\r\n        if (g > 255) g = 255;\r\n    } else {\r\n        g = Temperature - 60;\r\n        g = 288.1221695283 * Math.pow(g, -0.0755148492);\r\n        if (g < 0) g = 0;\r\n        if (g > 255) g = 255;\r\n    }\r\n\r\n    // Calculate Blue:\r\n    if (Temperature >= 66) {\r\n        b = 255;\r\n    } else {\r\n        if (Temperature <= 19) {\r\n            b = 0;\r\n        } else {\r\n            b = Temperature - 10;\r\n            b = 138.5177312231 * Math.log(b) - 305.0447927307;\r\n            if (b < 0) b = 0;\r\n            if (b > 255) b = 255;\r\n        }\r\n    }\r\n\r\n    return esm["vec3"].fromValues(r / 255, b / 255, g / 255);\r\n}\r\n\r\n\r\n\r\nfunction createAtmosphere(gl, global) {\r\n\r\n    skylight.atmProgram = shaderIdToProgram(\'atm_vs\', \'atm_fs\');\r\n\r\n\r\n    skylight.uSunPosLocation = gl.getUniformLocation(skylight.atmProgram, "uSunPos");\r\n    skylight.view_Location = gl.getUniformLocation(skylight.atmProgram, "view");\r\n    skylight.project_Location = gl.getUniformLocation(skylight.atmProgram, "projection");\r\n\r\n    gl.useProgram(skylight.atmProgram);\r\n    gl.uniform1i(gl.getUniformLocation(skylight.atmProgram, "isCloud"), skylight.clouds);\r\n    gl.uniform1f(gl.getUniformLocation(skylight.atmProgram, "cloudDensity"), skylight.cloud_density);\r\n    gl.uniform1f(gl.getUniformLocation(skylight.atmProgram, "cloudHeight"), skylight.cloud_height);\r\n    gl.uniform1f(gl.getUniformLocation(skylight.atmProgram, "cloudThickness"), skylight.cloud_thickness);\r\n    gl.uniform1i(gl.getUniformLocation(skylight.atmProgram, "isLightScattering"), skylight.light_scattering);\r\n    gl.uniform1f(gl.getUniformLocation(skylight.atmProgram, "gammaCor"), skylight.gamma_correction);\r\n\r\n    gl.useProgram(global.program);\r\n    gl.uniform1i(gl.getUniformLocation(global.program, "isCloud"), skylight.clouds);\r\n    gl.uniform1f(gl.getUniformLocation(global.program, "cloudDensity"), skylight.cloud_density);\r\n    gl.uniform1f(gl.getUniformLocation(global.program, "cloudHeight"), skylight.cloud_height);\r\n    gl.uniform1f(gl.getUniformLocation(global.program, "cloudThickness"), skylight.cloud_thickness);\r\n\r\n    let v = [\r\n        -1.0, 1.0, -1.0,\r\n        -1.0, -1.0, -1.0,\r\n        1.0, -1.0, -1.0,\r\n        1.0, -1.0, -1.0,\r\n        1.0, 1.0, -1.0,\r\n        -1.0, 1.0, -1.0,\r\n\r\n        -1.0, -1.0, 1.0,\r\n        -1.0, -1.0, -1.0,\r\n        -1.0, 1.0, -1.0,\r\n        -1.0, 1.0, -1.0,\r\n        -1.0, 1.0, 1.0,\r\n        -1.0, -1.0, 1.0,\r\n\r\n        1.0, -1.0, -1.0,\r\n        1.0, -1.0, 1.0,\r\n        1.0, 1.0, 1.0,\r\n        1.0, 1.0, 1.0,\r\n        1.0, 1.0, -1.0,\r\n        1.0, -1.0, -1.0,\r\n\r\n        -1.0, -1.0, 1.0,\r\n        -1.0, 1.0, 1.0,\r\n        1.0, 1.0, 1.0,\r\n        1.0, 1.0, 1.0,\r\n        1.0, -1.0, 1.0,\r\n        -1.0, -1.0, 1.0,\r\n\r\n        -1.0, 1.0, -1.0,\r\n        1.0, 1.0, -1.0,\r\n        1.0, 1.0, 1.0,\r\n        1.0, 1.0, 1.0,\r\n        -1.0, 1.0, 1.0,\r\n        -1.0, 1.0, -1.0,\r\n\r\n        -1.0, -1.0, -1.0,\r\n        -1.0, -1.0, 1.0,\r\n        1.0, -1.0, -1.0,\r\n        1.0, -1.0, -1.0,\r\n        -1.0, -1.0, 1.0,\r\n        1.0, -1.0, 1.0\r\n    ];\r\n    let atmVertices = new Float32Array(v);\r\n\r\n    skylight.atmVao = gl.createVertexArray();\r\n\r\n    let vbo = gl.createBuffer();\r\n\r\n    gl.bindVertexArray(skylight.atmVao);\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\r\n    gl.bufferData(gl.ARRAY_BUFFER, atmVertices.byteLength, gl.STATIC_DRAW);\r\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, atmVertices);\r\n\r\n\r\n    // Position attribute\r\n    gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 0, 0);\r\n    gl.enableVertexAttribArray(0);\r\n\r\n\r\n    gl.bindVertexArray(null);\r\n}\r\n\r\n\r\nfunction drawAtmosphere(gl, matrix, prev_program) {\r\n    // gl.disable(gl.DEPTH_TEST);\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ZERO, gl.ONE);\r\n\r\n    gl.useProgram(skylight.atmProgram);\r\n    gl.depthFunc(gl.LEQUAL);\r\n\r\n    gl.uniform3fv(skylight.uSunPosLocation, skylight.eyeToCamera);\r\n    gl.uniformMatrix4fv(skylight.view_Location, false, matrix.v);\r\n    gl.uniformMatrix4fv(skylight.project_Location, false, matrix.p);\r\n\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, skybox.tex_cubemap);\r\n    gl.uniform1i(gl.getUniformLocation(skylight.atmProgram, "skybox"), 0);\r\n\r\n    gl.activeTexture(gl.TEXTURE1);\r\n    gl.bindTexture(gl.TEXTURE_2D, skylight.tex_noise);\r\n    gl.uniform1i(gl.getUniformLocation(skylight.atmProgram, "tex_noise"), 1);\r\n\r\n    gl.uniform1f(gl.getUniformLocation(skylight.atmProgram, "iTime"), skylight.iTime*100);\r\n    \r\n\r\n    // skybox rotation\r\n    //  0 12 24\r\n    // +0 +12- -0\r\n    let rotTime = skylight.time;\r\n    if(skylight.time>=12.0){\r\n        rotTime = skylight.time-24.0;\r\n    }\r\n\r\n    let rot = esm["mat4"].create();\r\n    esm["mat4"].rotateX(rot, rot, Math.PI * 23.5 / 180.0);\r\n    let b = esm["mat4"].create();\r\n    esm["mat4"].rotateZ(b, b, Math.PI * (rotTime / 24.0) * 360 / 180.0);\r\n    esm["mat4"].multiply(rot, b, rot);\r\n    esm["mat4"].rotateY(b, esm["mat4"].create(), Math.PI * (rotTime / 24.0) / 180.0);\r\n    esm["mat4"].multiply(rot, b, rot);\r\n    gl.uniformMatrix4fv(gl.getUniformLocation(skylight.atmProgram, "rot"), false, rot);\r\n\r\n    gl.bindVertexArray(skylight.atmVao);\r\n    gl.drawArrays(gl.TRIANGLES, 0, 36);\r\n    gl.bindVertexArray(null);\r\n\r\n    // gl.enable(gl.DEPTH_TEST);\r\n    gl.depthFunc(gl.LESS);\r\n    gl.useProgram(prev_program);\r\n\r\n    gl.disable(gl.BLEND);\r\n}\n// CONCATENATED MODULE: ./camera.js\n\r\n\r\n\r\n\r\n\r\n\r\nvar camera = {\r\n    eye: null,      // position\r\n    front: null,\r\n    up: null,\r\n    near: null,\r\n    far: null,\r\n\r\n    FOV: null,\r\n\r\n    yaw: null,\r\n    pitch: null,\r\n\r\n    rot_sensitivity: null,\r\n\r\n    keydown_a: null,\r\n    keydown_w: null,\r\n    keydown_d: null,\r\n    keydown_s: null,\r\n    keydown_z: null,\r\n    keydown_x: null,\r\n    keydown_shift: null,\r\n    keydown_space: null,\r\n\r\n    speed: null,\r\n    speedFast: null,\r\n\r\n    velocity_y: null,\r\n    velocity_y_min: null,\r\n\r\n    fly: false,\r\n}\r\n\r\nvar ray_direction = esm["vec3"].fromValues(0, -1, 0);\r\nvar camera_v0 = esm["vec3"].fromValues(-1, -1, 0);\r\nvar camera_v1 = esm["vec3"].fromValues(1, 1, 0);\r\nvar camera_v2 = esm["vec3"].fromValues(-1, 1, 0);\r\nvar ray_length = 16.0 * 1.7;\r\nvar camera_ground = false;\r\nvar canJump = false;\r\nvar jumpForce = 2.0;\r\nvar seaLevel = -32.0;\r\nvar waterDrag = 0.5;\r\nvar gravity = 0.0;\r\n// var out = glm.vec3.fromValues(0, 0, 0);\r\n\r\n\r\nfunction cameraInit(view_matrix, fov) {\r\n    camera.eye = esm["vec3"].fromValues(1600, 200, 2000);\r\n    camera.front = esm["vec3"].fromValues(1, 0, 0);\r\n    camera.up = esm["vec3"].fromValues(0, 1, 0);\r\n    camera.near = 0.1;\r\n    camera.far = 3200.0;\r\n\r\n    camera.FOV = fov;\r\n\r\n    camera.yaw = 0.0;\r\n    camera.pitch = 0.0;\r\n\r\n    camera.rot_sensitivity = 0.08;\r\n\r\n    camera.keydown_a = false;\r\n    camera.keydown_w = false;\r\n    camera.keydown_d = false;\r\n    camera.keydown_s = false;\r\n    camera.keydown_z = false;\r\n    camera.keydown_x = false;\r\n    camera.keydown_shift = false;\r\n    camera.keydown_space = false;\r\n\r\n    camera.speed = 1.0;\r\n    camera.speedFast = 2.0;\r\n\r\n    camera.velocity_y = 0.0;\r\n    camera.velocity_y_min = -16.0;\r\n\r\n    recalculateViewMatrix(view_matrix);\r\n}\r\n\r\nfunction cameraMove() {\r\n\r\n    //rotate\r\n    camera.front[0] = Math.cos(camera.pitch * (Math.PI / 180)) * Math.cos(camera.yaw * (Math.PI / 180));\r\n    camera.front[1] = Math.sin(camera.pitch * (Math.PI / 180));\r\n    camera.front[2] = Math.cos(camera.pitch * (Math.PI / 180)) * Math.sin(camera.yaw * (Math.PI / 180));\r\n\r\n    esm["vec3"].normalize(camera.front, camera.front);\r\n\r\n\r\n    //move\r\n    let dir_tmp = esm["vec3"].fromValues(0, 0, 0);\r\n    let move_tmp = esm["vec3"].fromValues(0, 0, 0);\r\n    let speed_tmp = (camera.keydown_shift) ? camera.speedFast : camera.speed;\r\n    let underwater = false;\r\n    if(camera.fly){\r\n        speed_tmp *= 5.0;\r\n    }else{\r\n        //underwater detection\r\n        if (camera.eye[1] < seaLevel + 16.0 * 1.7 - 2){\r\n            underwater = true;\r\n            speed_tmp *= waterDrag;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //Left\r\n    if (camera.keydown_a) {\r\n        esm["vec3"].cross(dir_tmp, camera.front, camera.up);\r\n        esm["vec3"].normalize(dir_tmp, dir_tmp);\r\n        esm["vec3"].scale(dir_tmp, dir_tmp, -speed_tmp);\r\n        esm["vec3"].add(move_tmp, move_tmp, dir_tmp);\r\n    }\r\n\r\n    //Front\r\n    if (camera.keydown_w) {\r\n        if(camera.fly){\r\n            esm["vec3"].copy(dir_tmp, camera.front);\r\n        }else{\r\n            esm["vec3"].cross(dir_tmp, camera.front, camera.up);\r\n            esm["vec3"].cross(dir_tmp, camera.up, dir_tmp);\r\n        }\r\n        esm["vec3"].normalize(dir_tmp, dir_tmp);\r\n        esm["vec3"].scale(dir_tmp, dir_tmp, speed_tmp);\r\n        esm["vec3"].add(move_tmp, move_tmp, dir_tmp);\r\n    }\r\n\r\n    //Right\r\n    if (camera.keydown_d) {\r\n        esm["vec3"].cross(dir_tmp, camera.front, camera.up);\r\n        esm["vec3"].normalize(dir_tmp, dir_tmp);\r\n        esm["vec3"].scale(dir_tmp, dir_tmp, speed_tmp);\r\n        esm["vec3"].add(move_tmp, move_tmp, dir_tmp);\r\n    }\r\n\r\n    //Back\r\n    if (camera.keydown_s) {\r\n        if(camera.fly){\r\n            esm["vec3"].copy(dir_tmp, camera.front);\r\n        }else{\r\n            esm["vec3"].cross(dir_tmp, camera.front, camera.up);\r\n            esm["vec3"].cross(dir_tmp, camera.up, dir_tmp);\r\n        }\r\n        esm["vec3"].normalize(dir_tmp, dir_tmp);\r\n        esm["vec3"].scale(dir_tmp, dir_tmp, -speed_tmp);\r\n        esm["vec3"].add(move_tmp, move_tmp, dir_tmp);\r\n    }\r\n\r\n    //Up\r\n    if (camera.keydown_z) {\r\n        esm["vec3"].copy(dir_tmp, camera.up);\r\n        esm["vec3"].scale(dir_tmp, dir_tmp, speed_tmp);\r\n        esm["vec3"].add(camera.eye, camera.eye, dir_tmp);\r\n    }\r\n\r\n    //Down\r\n    if (camera.keydown_x) {\r\n        esm["vec3"].copy(dir_tmp, camera.up);\r\n        esm["vec3"].scale(dir_tmp, dir_tmp, -speed_tmp);\r\n        esm["vec3"].add(camera.eye, camera.eye, dir_tmp);\r\n    }\r\n\r\n    // detect ground (raycast)\r\n    if(!camera.fly){\r\n        let x = Math.floor(camera.eye[0] / 16.0);\r\n        let z = Math.floor(camera.eye[2] / 16.0);\r\n        let y = camera.eye[1] / 16.0 - 2.5;\r\n\r\n        let x2 = Math.floor((camera.eye[0] + move_tmp[0]) / 16.0);\r\n        let z2 = Math.floor((camera.eye[2] + move_tmp[2]) / 16.0);\r\n\r\n        if(x2 == x || y >= getY(x2, z)){\r\n            camera.eye[0] += move_tmp[0];\r\n        }else{\r\n            console.log(y);\r\n            console.log(getY(x2, z));\r\n        }\r\n        if(z2 == z || y >= getY(x, z2)){\r\n            camera.eye[2] += move_tmp[2];\r\n        }\r\n\r\n        canJump = false;\r\n        let ground = checkGround(camera.eye, ray_direction, ray_length, terrainObj);\r\n        if (ground) {\r\n            canJump = true;\r\n            camera.velocity_y = 0.0;\r\n            gravity = 0.0;\r\n        } else {\r\n            if (underwater) {\r\n                canJump = true;\r\n                jumpForce = 1.0;\r\n                gravity = -0.02;\r\n                camera.velocity_y_min = -1;\r\n            } else {\r\n                gravity = -0.1;\r\n                jumpForce = 2.0;\r\n                camera.velocity_y_min = -16;\r\n            }\r\n        }\r\n    \r\n        if (camera.keydown_space && canJump) {\r\n            camera.velocity_y = jumpForce;\r\n        } else {\r\n            camera.velocity_y += gravity;\r\n        }\r\n    \r\n        if (camera.velocity_y < camera.velocity_y_min) {\r\n            camera.velocity_y = (camera.velocity_y_min + camera.velocity_y) / 2.0;\r\n        }\r\n\r\n        // gravity\r\n        esm["vec3"].copy(dir_tmp, camera.up);\r\n        esm["vec3"].scale(dir_tmp, dir_tmp, camera.velocity_y);\r\n        esm["vec3"].add(camera.eye, camera.eye, dir_tmp);\r\n    }else{\r\n        esm["vec3"].add(camera.eye, camera.eye, move_tmp);\r\n        gravity = 0.0;\r\n    }\r\n\r\n\r\n\r\n    // checkGround (camera.eye, ray_direction, ray_length, terrainObj);\r\n\r\n    // for (var i=0; i<terrainObj.mesh.length; i++) {\r\n    //     if( glm.vec2.distance( [terrainObj.mesh[i][0][0], terrainObj.mesh[i][0][2] ], [camera.eye[0], camera.eye[2]] ) <= 50\r\n    //     ||  glm.vec2.distance( [terrainObj.mesh[i][1][0], terrainObj.mesh[i][1][2] ], [camera.eye[0], camera.eye[2]] ) <= 50\r\n    //     ||  glm.vec2.distance( [terrainObj.mesh[i][2][0], terrainObj.mesh[i][2][2] ], [camera.eye[0], camera.eye[2]] ) <= 50\r\n    //     )\r\n    //     checkIntersect(camera.eye, ray_direction, terrainObj.mesh[i][0], terrainObj.mesh[i][1], terrainObj.mesh[i][2], out);\r\n    // }\r\n    skylight.eye = esm["vec3"].fromValues(camera.eye[0] + skylight.eyeToCamera[0], camera.eye[1] + skylight.eyeToCamera[1], camera.eye[2] + skylight.eyeToCamera[2]);\r\n}\r\n\r\nfunction recalculateViewMatrix(view_matrix) {\r\n    let center = esm["vec3"].fromValues(camera.eye[0] + camera.front[0], camera.eye[1] + camera.front[1], camera.eye[2] + camera.front[2]);\r\n    esm["mat4"].lookAt(view_matrix, camera.eye, center, camera.up);\r\n    if(skylight.eye){\r\n        csm();\r\n    }\r\n    \r\n}\n// CONCATENATED MODULE: ./control.js\n\r\n\r\n\r\nfunction controlInit() {\r\n\r\n    document.onkeydown = keyboardEventKeyDown;\r\n    document.onkeyup = keyboardEventKeyUp;\r\n    document.getElementById(\'gcanvas\').onmousedown = mouseDown;\r\n\r\n    document.addEventListener(\'pointerlockchange\', function () {\r\n        if (document.pointerLockElement == document.body) {\r\n            document.addEventListener("mousemove", mouseMove, false);\r\n        } else {\r\n            document.removeEventListener("mousemove", mouseMove, false);\r\n        }\r\n    }, false);\r\n}\r\n\r\n\r\nfunction keyboardEventKeyDown(ev) {\r\n    // console.log(ev);\r\n    switch (ev.keyCode) {\r\n        case 65: //a\r\n            camera.keydown_a = true;\r\n            break;\r\n\r\n        case 87: //w\r\n            camera.keydown_w = true;\r\n            break;\r\n\r\n        case 68: //d\r\n            camera.keydown_d = true;\r\n            break;\r\n\r\n        case 83: //s\r\n            camera.keydown_s = true;\r\n            break;\r\n\r\n        case 90: //z\r\n            camera.keydown_z = true;\r\n            break;\r\n\r\n        case 88: //x\r\n            camera.keydown_x = true;\r\n            break;\r\n\r\n        case 16: //shift\r\n            camera.keydown_shift = true;\r\n            break;\r\n\r\n        case 32: //space\r\n            camera.keydown_space = true;\r\n            break;\r\n\r\n        case 84: //t\r\n            addSkylightTime(5);\r\n            break;\r\n\r\n        case 82: //r\r\n            addSkylightTime(-5);\r\n            break;\r\n    }\r\n\r\n}\r\n\r\nfunction keyboardEventKeyUp(ev) {\r\n    // console.log(ev);\r\n    switch (ev.keyCode) {\r\n        case 65: //a\r\n            camera.keydown_a = false;\r\n            break;\r\n\r\n        case 87: //w\r\n            camera.keydown_w = false;\r\n            break;\r\n\r\n        case 68: //d\r\n            camera.keydown_d = false;\r\n            break;\r\n\r\n        case 83: //s\r\n            camera.keydown_s = false;\r\n            break;\r\n\r\n        case 90: //z\r\n            camera.keydown_z = false;\r\n            break;\r\n\r\n        case 88: //x\r\n            camera.keydown_x = false;\r\n            break;\r\n\r\n        case 16: //shift\r\n            camera.keydown_shift = false;\r\n            break;\r\n\r\n        case 32: //space\r\n            camera.keydown_space = false;\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction mouseMove(ev) {\r\n\r\n    // console.log(ev);\r\n\r\n    let xoffset = ev.movementX;\r\n    let yoffset = -ev.movementY;\r\n\r\n    xoffset *= camera.rot_sensitivity;\r\n    yoffset *= camera.rot_sensitivity;\r\n\r\n    camera.yaw += xoffset;\r\n    camera.pitch += yoffset;\r\n\r\n    if (camera.pitch > 89.0)\r\n        camera.pitch = 89.0;\r\n    if (camera.pitch < -89.0)\r\n        camera.pitch = -89.0;\r\n\r\n}\r\n\r\n\r\nfunction mouseDown(ev) {\r\n\r\n    if (ev.which == 1) {\r\n        if (document.pointerLockElement == null) {\r\n            document.body.requestPointerLock();\r\n        }\r\n    }\r\n\r\n}\n// CONCATENATED MODULE: ./render.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// global variable\r\nvar render_gl = window.WebGL2RenderingContext.prototype; // specify type for code snippet\r\nvar stats = null;\r\nvar render_gui = null;\r\n\r\nvar render_global = {\r\n    program: null,\r\n    start: null,\r\n};\r\nvar render_matrix = {\r\n    m: null,\r\n    v: null,\r\n    p: null,\r\n};\r\nvar uniform = {\r\n    mvp: null,\r\n    m: null,\r\n    eye: null,\r\n    light: null,\r\n    co: null,\r\n    nm: null,\r\n    use: null,\r\n    useAO: null,\r\n    useShadow: null,\r\n    depthBufferLocation: [],\r\n    shadowMVPLocation: null,\r\n    biasLocation: null,\r\n    csmRange: [],\r\n    uL: [],\r\n    shadowColor: null,\r\n};\r\nvar model = {\r\n    vao: null,\r\n    ctr: null,\r\n    tex: [],\r\n};\r\nvar highResolutionOffset = 0;\r\nvar UI = {\r\n    Normal_Mapping: false,\r\n    High_Resolution: false,\r\n    Use_AO: true,\r\n}\r\n\r\nvar terrain = {\r\n    vao: null,\r\n    ctr: null,\r\n    tex: [],\r\n}\r\nvar water = {\r\n    vao: null,\r\n    ctr: null,\r\n    tex: [],\r\n    program: null,\r\n    mvp: null,\r\n    m: null,\r\n    eye: null,\r\n    light: null,\r\n    co: null,\r\n    nm: null,\r\n    texOffset: null,\r\n}\r\n\r\nvar shadowMap = {\r\n    program: null,\r\n    fbo: null,\r\n    depthTex: [],\r\n    size: null,\r\n    tex: null,\r\n    v: null,\r\n    p: null,\r\n    mvp: null,\r\n    mvpLocation: null,\r\n    lightMvp: null,\r\n    color: false,\r\n}\r\n\r\nvar postProcessing = {\r\n    vao: null,\r\n    program: null,\r\n    fbo: null,\r\n    mainTexture: null,\r\n    depthTexture: null,\r\n    depthBuffer: null,\r\n    mainTexLocation: null,\r\n    depthTexLocation: null,\r\n    fxaaOnLocation: null,\r\n    vignetteLocation: null,\r\n    resolutionLocation: null,\r\n}\r\n\r\nvar fxaa = {\r\n    on: false\r\n}\r\nvar vignette = {\r\n    on: true\r\n}\r\n\r\n// -------------------- csm ----------------------\r\nvar render_frames = [];\r\nvar num_csm = 3;\r\nvar csm_range = [];\r\nvar csm_range_c = [];\r\nvar light_matrices = [];\r\n// -------------------- csm ----------------------\r\n\r\nfunction initWebGL() {\r\n    let canvas = document.createElement(\'canvas\');\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n    document.querySelector(\'body\').appendChild(canvas);\r\n    canvas.setAttribute("id", "gcanvas");\r\n\r\n    render_gl = canvas.getContext(\'webgl2\');\r\n    if (!render_gl) {\r\n        alert(\'WebGL 2 not available\');\r\n    }\r\n\r\n    // get extension\r\n    render_gl.getExtension(\'EXT_color_buffer_float\');\r\n\r\n    // webgl setting\r\n    // gl.clearColor(0.478431, 0.725490, 1.0, 1.0);\r\n    render_gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n    render_gl.clearDepth(1.0);\r\n    render_gl.enable(render_gl.DEPTH_TEST);\r\n    render_gl.viewport(0, 0, render_gl.drawingBufferWidth, render_gl.drawingBufferHeight);\r\n    \r\n    // fps\r\n    stats = new stats_min();\r\n    stats.domElement.classList.add(\'navbar\')\r\n    document.body.appendChild(stats.domElement);\r\n\r\n    // gui\r\n    render_gui = new dat_gui_module["a" /* GUI */]();\r\n    render_gui.domElement.classList.add(\'navbar\');\r\n    let TeFolder = render_gui.addFolder(\'Texture\');\r\n    TeFolder.add(UI, \'Normal_Mapping\').onChange((val) => {\r\n        render_gl.useProgram(render_global.program);\r\n        render_gl.uniform1i(uniform.use, val);\r\n    });\r\n    TeFolder.add(UI, \'High_Resolution\').onChange((val) => {\r\n        highResolutionOffset = (highResolutionOffset + 2)%4\r\n    });\r\n    TeFolder.add(UI, \'Use_AO\').onChange((val) => {\r\n        render_gl.useProgram(render_global.program);\r\n        render_gl.uniform1i(uniform.useAO, val);\r\n    });\r\n    TeFolder.open();\r\n    let ShadowFolder = render_gui.addFolder("Shadow");\r\n    ShadowFolder.add(shadowMap, "color").onChange((val) => {\r\n        render_gl.useProgram(render_global.program);\r\n        render_gl.uniform1i(uniform.shadowColor, val);\r\n    });\r\n    ShadowFolder.open();\r\n    let FXAAFolder = render_gui.addFolder("FXAA");\r\n    FXAAFolder.add(fxaa, "on").onChange((val) => {\r\n        render_gl.useProgram(postProcessing.program);\r\n        render_gl.uniform1i(postProcessing.fxaaOnLocation, val);\r\n    });\r\n    FXAAFolder.open();\r\n    let VignetteFolder = render_gui.addFolder("Vignette");\r\n    VignetteFolder.add(vignette, "on").onChange((val) => {\r\n        render_gl.useProgram(postProcessing.program);\r\n        render_gl.uniform1i(postProcessing.vignetteLocation, val);\r\n    });\r\n    VignetteFolder.open();\r\n    \r\n    let cameraUIObject = function() {\r\n        this.FOV = 70;\r\n    };\r\n\r\n    let cameraUI = new cameraUIObject();\r\n    let caFolder = render_gui.addFolder(\'Camera\');\r\n    let test;\r\n    caFolder.add(cameraUI, \'FOV\', 0.01, 179.99).onChange((val) => {\r\n        esm["mat4"].perspective(render_matrix.p, Math.PI * val / 180.0, render_gl.drawingBufferWidth / render_gl.drawingBufferHeight, camera.near, camera.far);\r\n        camera.FOV = val;\r\n    });\r\n    caFolder.add(camera, "fly");\r\n    caFolder.open();\r\n\r\n\r\n\r\n    // matrix\r\n    render_matrix.m = esm["mat4"].create();\r\n    render_matrix.v = esm["mat4"].create();\r\n    render_matrix.p = esm["mat4"].create();\r\n\r\n    \r\n\r\n    cameraInit(render_matrix.v, 70);\r\n    \r\n    createShader();\r\n\r\n    skylightInit(render_gl, render_gui, render_global);\r\n\r\n    shadowProgramSetup();\r\n    shadowFrameBufferSetup();\r\n    waterProgramSetup();\r\n\r\n    postProcessingSetup();\r\n\r\n    // glm.mat4.perspective(matrix.p, Math.PI * 0.5, gl.drawingBufferWidth / gl.drawingBufferHeight, 0.1, 20000.0);\r\n    esm["mat4"].perspective(render_matrix.p, Math.PI * camera.FOV / 180.0, render_gl.drawingBufferWidth / render_gl.drawingBufferHeight, camera.near, camera.far);\r\n\r\n    if (!String.prototype.getFileName) {\r\n        String.prototype.getFileName = function () {\r\n            let element = this.split(\'/\');\r\n            return element[element.length - 1];\r\n        }\r\n    }\r\n\r\n\r\n    skyboxInit(render_gl);\r\n\r\n    // control\r\n    controlInit();\r\n}\r\n\r\nfunction csm() {\r\n    var view_matrix_inv = esm["mat4"].create();\r\n    var view_matrix_light = esm["mat4"].create();\r\n    esm["mat4"].invert(view_matrix_inv, render_matrix.v);\r\n    esm["mat4"].lookAt(view_matrix_light, esm["vec3"].scale(skylight.eye, skylight.eye, 1.0), skylight.pointLookat, skylight.up);\r\n    var aspect_ratio = render_gl.drawingBufferWidth / render_gl.drawingBufferHeight;\r\n    var tan_half_hfov = Math.tan(camera.FOV * 0.5 * Math.PI / 180.0 * aspect_ratio);\r\n    var tan_half_vfov = Math.tan(camera.FOV * 0.5 * Math.PI / 180.0);\r\n\r\n    csm_range[0] = -camera.near;\r\n    csm_range[1] = -50.0;\r\n    csm_range[2] = -200.0;\r\n    csm_range[3] = -2000.0;\r\n\r\n    var view = esm["vec4"].create();\r\n    var clip = esm["vec4"].create();\r\n    for (var i = 0; i < num_csm; i++) {\r\n        view = esm["vec4"].fromValues(0, 0, csm_range[i+1], 1);\r\n        esm["vec4"].transformMat4(clip, view, render_matrix.p);\r\n        \r\n        csm_range_c[i] = clip[2] / camera.far;\r\n    }\r\n\r\n    var xn, xf, yn, yf;\r\n    for (var i = 0; i < num_csm; i++) {\r\n        xn = csm_range[i] * tan_half_hfov;\r\n        xf = csm_range[i+1] * tan_half_hfov;\r\n        yn = csm_range[i] * tan_half_vfov;\r\n        yf = csm_range[i+1] * tan_half_vfov;\r\n        \r\n        var frustum_corners = [];\r\n        frustum_corners.length = 8;\r\n\r\n        frustum_corners[0] = esm["vec4"].fromValues(xn, yn, csm_range[i], 1);\r\n        frustum_corners[1] = esm["vec4"].fromValues(-xn, yn, csm_range[i], 1);\r\n        frustum_corners[2] = esm["vec4"].fromValues(xn, -yn, csm_range[i], 1);\r\n        frustum_corners[3] = esm["vec4"].fromValues(-xn, -yn, csm_range[i], 1);\r\n        frustum_corners[4] = esm["vec4"].fromValues(xf, yf, csm_range[i+1], 1);\r\n        frustum_corners[5] = esm["vec4"].fromValues(-xf, yf, csm_range[i+1], 1);\r\n        frustum_corners[6] = esm["vec4"].fromValues(xf, -yf, csm_range[i+1], 1);\r\n        frustum_corners[7] = esm["vec4"].fromValues(-xf, -yf, csm_range[i+1], 1);\r\n\r\n        var frustum_corners_L = [];\r\n        frustum_corners_L.length = 8;\r\n\r\n        var min_x = Number.MAX_VALUE;\r\n        var min_y = Number.MAX_VALUE;\r\n        var min_z = Number.MAX_VALUE;\r\n        var max_x = Number.MIN_VALUE;\r\n        var max_y = Number.MIN_VALUE;\r\n        var max_z = Number.MIN_VALUE;\r\n\r\n        for (var j = 0; j < 8; j++) {\r\n            frustum_corners_L[j] = esm["vec4"].create();\r\n            esm["vec4"].transformMat4(view, frustum_corners[j], view_matrix_inv);\r\n            esm["vec4"].transformMat4(frustum_corners_L[j], view, view_matrix_light);\r\n\r\n            min_x = Math.min(min_x, frustum_corners_L[j][0]);\r\n            max_x = Math.max(max_x, frustum_corners_L[j][0]);\r\n\r\n            min_y = Math.min(min_y, frustum_corners_L[j][1]);\r\n            max_y = Math.max(max_y, frustum_corners_L[j][1]);\r\n\r\n            min_z = Math.min(min_z, frustum_corners_L[j][2]);\r\n            max_z = Math.max(max_z, frustum_corners_L[j][2]);\r\n        }\r\n\r\n        light_matrices[i] = esm["mat4"].create();\r\n        esm["mat4"].ortho(light_matrices[i], min_x, max_x, min_y, max_y, -max_z, -min_z);\r\n        esm["mat4"].multiply(light_matrices[i], light_matrices[i], view_matrix_light);\r\n    }\r\n}\r\n\r\nfunction shadowProgramSetup() {\r\n\r\n    shadowMap.program = shaderIdToProgram("depth-vs", "depth-fs");\r\n\r\n    // uniform location\r\n    shadowMap.mvpLocation = render_gl.getUniformLocation(shadowMap.program, \'mvp\');\r\n}\r\n\r\nfunction shadowFrameBufferSetup() {\r\n    shadowMap.size = 8196;\r\n\r\n    for (var i = 0; i < 3; i++) {\r\n        var frame = {\r\n            fbo: null,\r\n        }\r\n        if(render_frames[i] == null){\r\n            frame.fbo = render_gl.createFramebuffer();\r\n            render_frames.push(frame);\r\n        }else{\r\n            frame = render_frames[i];\r\n        }\r\n        render_gl.bindFramebuffer(render_gl.FRAMEBUFFER, frame.fbo);\r\n\r\n        render_gl.activeTexture(render_gl.TEXTURE0);\r\n\r\n        shadowMap.depthTex[i] = render_gl.createTexture();\r\n        render_gl.bindTexture(render_gl.TEXTURE_2D, shadowMap.depthTex[i]);\r\n        render_gl.texImage2D(render_gl.TEXTURE_2D, 0, render_gl.DEPTH_COMPONENT32F, render_gl.drawingBufferWidth * 4, render_gl.drawingBufferHeight * 4, 0, render_gl.DEPTH_COMPONENT, render_gl.FLOAT, null);\r\n        render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_MAG_FILTER, render_gl.LINEAR);\r\n        render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_MIN_FILTER, render_gl.LINEAR);\r\n        render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_WRAP_S, render_gl.CLAMP_TO_EDGE);\r\n        render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_WRAP_T, render_gl.CLAMP_TO_EDGE);\r\n        render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_COMPARE_MODE, render_gl.COMPARE_REF_TO_TEXTURE);\r\n        render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_COMPARE_FUNC, render_gl.LEQUAL);\r\n        render_gl.framebufferTexture2D(render_gl.FRAMEBUFFER, render_gl.DEPTH_ATTACHMENT, render_gl.TEXTURE_2D, shadowMap.depthTex[i], 0);\r\n\r\n        render_gl.bindFramebuffer(render_gl.FRAMEBUFFER, null);\r\n    }\r\n}\r\n\r\nfunction waterProgramSetup() {\r\n    water.program = shaderIdToProgram("water_vs", "water_fs");\r\n    \r\n    // uniform location\r\n    water.mvp = render_gl.getUniformLocation(water.program, \'uMVP\');\r\n    water.co = render_gl.getUniformLocation(water.program, \'uCO\');\r\n    water.nm = render_gl.getUniformLocation(water.program, \'uNM\');\r\n    water.m = render_gl.getUniformLocation(water.program, \'uM\');\r\n    water.eye = render_gl.getUniformLocation(water.program, \'uEye\');\r\n    water.light = render_gl.getUniformLocation(water.program, \'uLight\');\r\n    water.texOffset = render_gl.getUniformLocation(water.program, \'offset\');\r\n    \r\n    render_gl.useProgram(water.program);\r\n    render_gl.uniform1i(water.co, 0);\r\n    render_gl.uniform1i(water.nm, 1);\r\n    render_gl.uniform1f(water.texOffset, 0);\r\n}\r\n\r\nfunction postProcessingSetup() {\r\n    //program\r\n    postProcessing.program = shaderIdToProgram("postProcessing-vs", "postProcessing-fs");\r\n\r\n    let v = [\r\n        1.0, -1.0, 0.0,\r\n        -1.0, -1.0, 0.0,\r\n        -1.0, 1.0, 0.0,\r\n        1.0, -1.0, 0.0,\r\n        -1.0, 1.0, 0.0,\r\n        1.0, 1.0, 0.0\r\n    ]\r\n    let vt = [\r\n        1.0, 0.0,\r\n        0.0, 0.0,\r\n        0.0, 1.0,\r\n        1.0, 0.0,\r\n        0.0, 1.0,\r\n        1.0, 1.0\r\n    ]\r\n    let idx = [\r\n        0, 1, 2, 3, 4, 5\r\n    ]\r\n    let window_positions = new Float32Array(v);\r\n    let texture_coord = new Float32Array(vt);\r\n\r\n    postProcessing.vao = render_gl.createVertexArray();\r\n    render_gl.bindVertexArray(postProcessing.vao);\r\n\r\n    let window_buffer = render_gl.createBuffer();\r\n    render_gl.bindBuffer(render_gl.ARRAY_BUFFER, window_buffer);\r\n    render_gl.bufferData(render_gl.ARRAY_BUFFER, window_positions.byteLength + texture_coord.byteLength, render_gl.STATIC_DRAW);\r\n    render_gl.bufferSubData(render_gl.ARRAY_BUFFER, 0, window_positions);\r\n    render_gl.bufferSubData(render_gl.ARRAY_BUFFER, window_positions.byteLength, texture_coord);\r\n\r\n    render_gl.vertexAttribPointer(0, 3, render_gl.FLOAT, false, 0, 0);\r\n    render_gl.enableVertexAttribArray(0);\r\n    render_gl.vertexAttribPointer(1, 2, render_gl.FLOAT, false, 0, window_positions.byteLength);\r\n    render_gl.enableVertexAttribArray(1);\r\n\r\n    let indices = new Uint32Array(idx);\r\n    let ebo = render_gl.createBuffer();\r\n    render_gl.bindBuffer(render_gl.ELEMENT_ARRAY_BUFFER, ebo);\r\n    render_gl.bufferData(render_gl.ELEMENT_ARRAY_BUFFER, indices, render_gl.STATIC_DRAW);\r\n\r\n    v.length = 0;\r\n    idx.length = 0;\r\n\r\n    postProcessing.mainTexLocation = render_gl.getUniformLocation(postProcessing.program, "uColorBuffer");\r\n    postProcessing.depthTexLocation = render_gl.getUniformLocation(postProcessing.program, "uDepthBuffer");\r\n    postProcessing.fxaaOnLocation = render_gl.getUniformLocation(postProcessing.program, "fxaaOn");\r\n    postProcessing.vignetteLocation = render_gl.getUniformLocation(postProcessing.program, "vignetteOn");\r\n    postProcessing.resolutionLocation = render_gl.getUniformLocation(postProcessing.program, "resolution");\r\n    \r\n    render_gl.useProgram(postProcessing.program);\r\n    render_gl.uniform1i(postProcessing.vignetteLocation, 1);\r\n\r\n    //fbo\r\n    postProcessing.fbo = render_gl.createFramebuffer();\r\n    \r\n    initPostProcessingTexture();\r\n}\r\n\r\nfunction createShader() {\r\n\r\n    render_global.program = shaderIdToProgram(\'vertex\', \'fragment\');\r\n\r\n    // uniform location\r\n    uniform.mvp = render_gl.getUniformLocation(render_global.program, \'uMVP\');\r\n    uniform.co = render_gl.getUniformLocation(render_global.program, \'uCO\');\r\n    uniform.nm = render_gl.getUniformLocation(render_global.program, \'uNM\');\r\n    uniform.m = render_gl.getUniformLocation(render_global.program, \'uM\');\r\n    uniform.eye = render_gl.getUniformLocation(render_global.program, \'uEye\');\r\n    uniform.light = render_gl.getUniformLocation(render_global.program, \'uLight\');\r\n    uniform.use = render_gl.getUniformLocation(render_global.program, \'uUse\');\r\n    uniform.useAO = render_gl.getUniformLocation(render_global.program, \'uUseAO\');\r\n    uniform.useShadow = render_gl.getUniformLocation(render_global.program, \'uUseShadow\');\r\n    uniform.shadowColor = render_gl.getUniformLocation(render_global.program, "shadowColor");\r\n\r\n    uniform.depthBufferLocation[0] = render_gl.getUniformLocation(render_global.program, "uDepthBuffer[0]");\r\n    uniform.depthBufferLocation[1] = render_gl.getUniformLocation(render_global.program, "uDepthBuffer[1]");\r\n    uniform.depthBufferLocation[2] = render_gl.getUniformLocation(render_global.program, "uDepthBuffer[2]");\r\n\r\n    uniform.uL[0] = render_gl.getUniformLocation(render_global.program, "uL[0]");\r\n    uniform.uL[1] = render_gl.getUniformLocation(render_global.program, "uL[1]");\r\n    uniform.uL[2] = render_gl.getUniformLocation(render_global.program, "uL[2]");\r\n\r\n    uniform.shadowMVPLocation = render_gl.getUniformLocation(render_global.program, "uShadowMVP");\r\n    uniform.biasLocation = render_gl.getUniformLocation(render_global.program, \'bias\');\r\n\r\n    uniform.csmRange[0] = render_gl.getUniformLocation(render_global.program, "uCsmRange[0]");\r\n    uniform.csmRange[1] = render_gl.getUniformLocation(render_global.program, "uCsmRange[1]");\r\n    uniform.csmRange[2] = render_gl.getUniformLocation(render_global.program, "uCsmRange[2]");\r\n\r\n\r\n    render_gl.useProgram(render_global.program);\r\n    render_gl.uniform1i(uniform.co, 0);\r\n    render_gl.uniform1i(uniform.nm, 1);\r\n    render_gl.uniform3fv(uniform.eye, camera.eye);\r\n    render_gl.uniform1i(uniform.use, UI.Normal_Mapping);\r\n    render_gl.uniform1i(uniform.useAO, UI.Use_AO);\r\n}\r\n\r\nfunction shaderIdToProgram(vsId, fsId) {\r\n    // get shader string\r\n    let vsSrc = document.getElementById(vsId).innerText.trim();\r\n    let fsSrc = document.getElementById(fsId).innerText.trim();\r\n\r\n    // create vertex shader\r\n    let vs = render_gl.createShader(render_gl.VERTEX_SHADER);\r\n    render_gl.shaderSource(vs, vsSrc);\r\n    render_gl.compileShader(vs);\r\n\r\n    if (!render_gl.getShaderParameter(vs, render_gl.COMPILE_STATUS)) {\r\n        console.error(render_gl.getShaderInfoLog(vs));\r\n    }\r\n\r\n    // create fragment shader\r\n    let fs = render_gl.createShader(render_gl.FRAGMENT_SHADER);\r\n    render_gl.shaderSource(fs, fsSrc);\r\n    render_gl.compileShader(fs);\r\n\r\n    if (!render_gl.getShaderParameter(fs, render_gl.COMPILE_STATUS)) {\r\n        console.error(render_gl.getShaderInfoLog(fs));\r\n    }\r\n\r\n    // create shader program\r\n    let retProgram = render_gl.createProgram();\r\n    render_gl.attachShader(retProgram, vs);\r\n    render_gl.attachShader(retProgram, fs);\r\n    render_gl.linkProgram(retProgram);\r\n\r\n    if (!render_gl.getProgramParameter(retProgram, render_gl.LINK_STATUS)) {\r\n        console.error(render_gl.getProgramInfoLog(retProgram));\r\n    }\r\n\r\n    return retProgram;\r\n}\r\n\r\nfunction _loadFile(url) {\r\n    let fr = new FileReader();\r\n    return new Promise((resolve, reject) => {\r\n        let req = new XMLHttpRequest();\r\n        req.open(\'GET\', url, true);\r\n        req.responseType = \'blob\';\r\n        req.onload = () => {\r\n            fr.readAsText(req.response);\r\n            fr.onload = (e) => {\r\n                let f = e.target.result;\r\n                let ls = f.split(/\\r?\\n/);\r\n                resolve(ls);\r\n            };\r\n        }\r\n        req.onerror = () => {\r\n            reject(new Error(`Failed to load file\'s url: ${url}`));\r\n        };\r\n        req.send();\r\n    });\r\n}\r\n\r\nasync function loadObj(url) {\r\n    // read file\r\n    let lines = await _loadFile(url);\r\n\r\n    // parse obj format\r\n    let v = [];\r\n    let vt = [];\r\n    let vn = [];\r\n    let idx = [];\r\n\r\n    for (let line of lines) {\r\n        line = line.split(\' \');\r\n        // console.log(line);\r\n        if (line[0] == \'v\') {\r\n            v.push(parseFloat(line[1]));\r\n            v.push(parseFloat(line[2]));\r\n            v.push(parseFloat(line[3]));\r\n        }\r\n        else if (line[0] == \'vn\') {\r\n            vn.push(parseFloat(line[1]));\r\n            vn.push(parseFloat(line[2]));\r\n            vn.push(parseFloat(line[3]));\r\n        }\r\n        else if (line[0] == \'vt\') {\r\n            vt.push(parseFloat(line[1]));\r\n            // flip vertically\r\n            vt.push(1.0 - parseFloat(line[2]));\r\n        }\r\n        else if (line[0] == \'f\') {\r\n            // start from zero\r\n            idx.push(parseInt(line[1].split(\'/\')[0]) - 1);\r\n            idx.push(parseInt(line[2].split(\'/\')[0]) - 1);\r\n            idx.push(parseInt(line[3].split(\'/\')[0]) - 1);\r\n        }\r\n    }\r\n\r\n    // compute tangent\r\n    let tn = [];\r\n    for (let i = 0; i < idx.length; i += 3) {\r\n        let idx1 = idx[i];\r\n        let idx2 = idx[i + 1];\r\n        let idx3 = idx[i + 2];\r\n\r\n        let p1 = esm["vec3"].fromValues(v[idx1 * 3 + 0], v[idx1 * 3 + 1], v[idx1 * 3 + 2]);\r\n        let p2 = esm["vec3"].fromValues(v[idx2 * 3 + 0], v[idx2 * 3 + 1], v[idx2 * 3 + 2]);\r\n        let p3 = esm["vec3"].fromValues(v[idx3 * 3 + 0], v[idx3 * 3 + 1], v[idx3 * 3 + 2]);\r\n\r\n        let n1 = esm["vec3"].fromValues(vn[idx1 * 3 + 0], vn[idx1 * 3 + 1], vn[idx1 * 3 + 2]);\r\n        let n2 = esm["vec3"].fromValues(vn[idx2 * 3 + 0], vn[idx2 * 3 + 1], vn[idx2 * 3 + 2]);\r\n        let n3 = esm["vec3"].fromValues(vn[idx3 * 3 + 0], vn[idx3 * 3 + 1], vn[idx3 * 3 + 2]);\r\n\r\n        let uv1 = esm["vec2"].fromValues(vt[idx1 * 2 + 0], vt[idx1 * 2 + 1]);\r\n        let uv2 = esm["vec2"].fromValues(vt[idx2 * 2 + 0], vt[idx2 * 2 + 1]);\r\n        let uv3 = esm["vec2"].fromValues(vt[idx3 * 2 + 0], vt[idx3 * 2 + 1]);\r\n\r\n        let dp1 = esm["vec3"].create(); esm["vec3"].sub(dp1, p2, p1);\r\n        let dp2 = esm["vec3"].create(); esm["vec3"].sub(dp2, p3, p1);\r\n\r\n        let duv1 = esm["vec2"].create(); esm["vec2"].sub(duv1, uv2, uv1);\r\n        let duv2 = esm["vec2"].create(); esm["vec2"].sub(duv2, uv3, uv1);\r\n\r\n        let r = 1.0 / (duv1[0] * duv2[1] - duv1[1] * duv2[0]);\r\n\r\n        let t = esm["vec3"].fromValues(\r\n            (dp1[0] * duv2[1] - dp2[0] * duv1[1]) * r,\r\n            (dp1[1] * duv2[1] - dp2[1] * duv1[1]) * r,\r\n            (dp1[2] * duv2[1] - dp2[2] * duv1[1]) * r\r\n        );\r\n\r\n        let t1 = esm["vec3"].create(); esm["vec3"].cross(t1, n1, t);\r\n        let t2 = esm["vec3"].create(); esm["vec3"].cross(t2, n2, t);\r\n        let t3 = esm["vec3"].create(); esm["vec3"].cross(t3, n3, t);\r\n\r\n        tn[idx1 * 3 + 0] = t1[0];\r\n        tn[idx1 * 3 + 1] = t1[1];\r\n        tn[idx1 * 3 + 2] = t1[2];\r\n\r\n        tn[idx2 * 3 + 0] = t2[0];\r\n        tn[idx2 * 3 + 1] = t2[1];\r\n        tn[idx2 * 3 + 2] = t2[2];\r\n\r\n        tn[idx3 * 3 + 0] = t3[0];\r\n        tn[idx3 * 3 + 1] = t3[1];\r\n        tn[idx3 * 3 + 2] = t3[2];\r\n    }\r\n\r\n    // stats\r\n    console.log(`Load ${url}: ${v.length} vertices, ${vt.length} texcoords, ${vn.length} normals ` +\r\n        `${tn.length} tangents ${idx.length / 3} faces`);\r\n\r\n    // vao\r\n    model.vao = render_gl.createVertexArray();\r\n    render_gl.bindVertexArray(model.vao);\r\n\r\n    // vbo\r\n    let positions = new Float32Array(v);\r\n    let normals = new Float32Array(vn);\r\n    let texcoords = new Float32Array(vt);\r\n    let tangents = new Float32Array(tn);\r\n\r\n    let vbo = render_gl.createBuffer();\r\n    render_gl.bindBuffer(render_gl.ARRAY_BUFFER, vbo);\r\n    render_gl.bufferData(render_gl.ARRAY_BUFFER, positions.byteLength + normals.byteLength + texcoords.byteLength + tangents.byteLength, render_gl.STATIC_DRAW);\r\n    render_gl.bufferSubData(render_gl.ARRAY_BUFFER, 0, positions);\r\n    render_gl.bufferSubData(render_gl.ARRAY_BUFFER, positions.byteLength, normals);\r\n    render_gl.bufferSubData(render_gl.ARRAY_BUFFER, positions.byteLength + normals.byteLength, texcoords);\r\n    render_gl.bufferSubData(render_gl.ARRAY_BUFFER, positions.byteLength + normals.byteLength + texcoords.byteLength, tangents);\r\n\r\n    render_gl.vertexAttribPointer(0, 3, render_gl.FLOAT, false, 0, 0);\r\n    render_gl.enableVertexAttribArray(0);\r\n    render_gl.vertexAttribPointer(1, 3, render_gl.FLOAT, false, 0, positions.byteLength);\r\n    render_gl.enableVertexAttribArray(1);\r\n    render_gl.vertexAttribPointer(2, 2, render_gl.FLOAT, false, 0, positions.byteLength + normals.byteLength);\r\n    render_gl.enableVertexAttribArray(2);\r\n    render_gl.vertexAttribPointer(3, 3, render_gl.FLOAT, false, 0, positions.byteLength + normals.byteLength + texcoords.byteLength);\r\n    render_gl.enableVertexAttribArray(3);\r\n\r\n    // ebo\r\n    let indices = new Uint32Array(idx);\r\n    let ebo = render_gl.createBuffer();\r\n    render_gl.bindBuffer(render_gl.ELEMENT_ARRAY_BUFFER, ebo);\r\n    render_gl.bufferData(render_gl.ELEMENT_ARRAY_BUFFER, indices, render_gl.STATIC_DRAW);\r\n    model.ctr = idx.length;\r\n\r\n    // free array\r\n    v.length = 0;\r\n    vt.length = 0;\r\n    vn.length = 0;\r\n    idx.length = 0;\r\n    tn.length = 0;\r\n\r\n    render_gl.bindVertexArray(null);\r\n    return true;\r\n}\r\n\r\nfunction loadImage(url) {\r\n    return new Promise((resolve, reject) => {\r\n        let img = new Image();\r\n        img.onload = () => {\r\n            resolve(img);\r\n        };\r\n        img.onerror = () => {\r\n            reject(new Error(`Failed to load image\'s url: ${url}`));\r\n        }\r\n        img.src = url;\r\n        img.crossOrigin = \'anonymous\';\r\n    });\r\n}\r\n\r\nasync function loadTerrain() {\r\n    terrain.vao = render_gl.createVertexArray();\r\n    render_gl.bindVertexArray(terrain.vao);\r\n    generateTerrain();\r\n\r\n    let v = terrainObj.v;\r\n    let vn = terrainObj.vn;\r\n    let vt = terrainObj.vt;\r\n    let idx = terrainObj.idx;\r\n    let vc = terrainObj.vc;\r\n\r\n    // compute tangent\r\n    let tn = [];\r\n    for (let i = 0; i < idx.length; i += 3) {\r\n        let idx1 = idx[i];\r\n        let idx2 = idx[i + 1];\r\n        let idx3 = idx[i + 2];\r\n\r\n        let p1 = esm["vec3"].fromValues(v[idx1 * 3 + 0], v[idx1 * 3 + 1], v[idx1 * 3 + 2]);\r\n        let p2 = esm["vec3"].fromValues(v[idx2 * 3 + 0], v[idx2 * 3 + 1], v[idx2 * 3 + 2]);\r\n        let p3 = esm["vec3"].fromValues(v[idx3 * 3 + 0], v[idx3 * 3 + 1], v[idx3 * 3 + 2]);\r\n\r\n        let n1 = esm["vec3"].fromValues(vn[idx1 * 3 + 0], vn[idx1 * 3 + 1], vn[idx1 * 3 + 2]);\r\n        let n2 = esm["vec3"].fromValues(vn[idx2 * 3 + 0], vn[idx2 * 3 + 1], vn[idx2 * 3 + 2]);\r\n        let n3 = esm["vec3"].fromValues(vn[idx3 * 3 + 0], vn[idx3 * 3 + 1], vn[idx3 * 3 + 2]);\r\n\r\n        let uv1 = esm["vec2"].fromValues(vt[idx1 * 2 + 0], vt[idx1 * 2 + 1]);\r\n        let uv2 = esm["vec2"].fromValues(vt[idx2 * 2 + 0], vt[idx2 * 2 + 1]);\r\n        let uv3 = esm["vec2"].fromValues(vt[idx3 * 2 + 0], vt[idx3 * 2 + 1]);\r\n\r\n        let dp1 = esm["vec3"].create(); esm["vec3"].sub(dp1, p2, p1);\r\n        let dp2 = esm["vec3"].create(); esm["vec3"].sub(dp2, p3, p1);\r\n\r\n        let duv1 = esm["vec2"].create(); esm["vec2"].sub(duv1, uv2, uv1);\r\n        let duv2 = esm["vec2"].create(); esm["vec2"].sub(duv2, uv3, uv1);\r\n\r\n        let r = 1.0 / (duv1[0] * duv2[1] - duv1[1] * duv2[0]);\r\n\r\n        let t = esm["vec3"].fromValues(\r\n            (dp1[0] * duv2[1] - dp2[0] * duv1[1]) * r,\r\n            (dp1[1] * duv2[1] - dp2[1] * duv1[1]) * r,\r\n            (dp1[2] * duv2[1] - dp2[2] * duv1[1]) * r\r\n        );\r\n\r\n        let t1 = esm["vec3"].create(); esm["vec3"].cross(t1, n1, t);\r\n        let t2 = esm["vec3"].create(); esm["vec3"].cross(t2, n2, t);\r\n        let t3 = esm["vec3"].create(); esm["vec3"].cross(t3, n3, t);\r\n\r\n        tn[idx1 * 3 + 0] = t1[0];\r\n        tn[idx1 * 3 + 1] = t1[1];\r\n        tn[idx1 * 3 + 2] = t1[2];\r\n\r\n        tn[idx2 * 3 + 0] = t2[0];\r\n        tn[idx2 * 3 + 1] = t2[1];\r\n        tn[idx2 * 3 + 2] = t2[2];\r\n\r\n        tn[idx3 * 3 + 0] = t3[0];\r\n        tn[idx3 * 3 + 1] = t3[1];\r\n        tn[idx3 * 3 + 2] = t3[2];\r\n    }\r\n\r\n    let positions = new Float32Array(v);\r\n    let normals = new Float32Array(vn);\r\n    let texcoords = new Float32Array(vt);\r\n    let tangents = new Float32Array(tn);\r\n    let vertexColors = new Float32Array(vc);\r\n\r\n    let vbo = render_gl.createBuffer();\r\n    render_gl.bindBuffer(render_gl.ARRAY_BUFFER, vbo);\r\n    render_gl.bufferData(render_gl.ARRAY_BUFFER, positions.byteLength + normals.byteLength + texcoords.byteLength + tangents.byteLength + vertexColors.byteLength, render_gl.STATIC_DRAW);\r\n    render_gl.bufferSubData(render_gl.ARRAY_BUFFER, 0, positions);\r\n    render_gl.bufferSubData(render_gl.ARRAY_BUFFER, positions.byteLength, normals);\r\n    render_gl.bufferSubData(render_gl.ARRAY_BUFFER, positions.byteLength + normals.byteLength, texcoords);\r\n    render_gl.bufferSubData(render_gl.ARRAY_BUFFER, positions.byteLength + normals.byteLength + texcoords.byteLength, tangents);\r\n    render_gl.bufferSubData(render_gl.ARRAY_BUFFER, positions.byteLength + normals.byteLength + texcoords.byteLength + tangents.byteLength, vertexColors);\r\n\r\n    render_gl.vertexAttribPointer(0, 3, render_gl.FLOAT, false, 0, 0);\r\n    render_gl.enableVertexAttribArray(0);\r\n    render_gl.vertexAttribPointer(1, 3, render_gl.FLOAT, false, 0, positions.byteLength);\r\n    render_gl.enableVertexAttribArray(1);\r\n    render_gl.vertexAttribPointer(2, 2, render_gl.FLOAT, false, 0, positions.byteLength + normals.byteLength);\r\n    render_gl.enableVertexAttribArray(2);\r\n    render_gl.vertexAttribPointer(3, 3, render_gl.FLOAT, false, 0, positions.byteLength + normals.byteLength + texcoords.byteLength);\r\n    render_gl.enableVertexAttribArray(3);\r\n    render_gl.vertexAttribPointer(4, 1, render_gl.FLOAT, false, 0, positions.byteLength + normals.byteLength + texcoords.byteLength + tangents.byteLength);\r\n    render_gl.enableVertexAttribArray(4);\r\n\r\n    // ebo\r\n    let indices = new Uint32Array(idx);\r\n    let ebo = render_gl.createBuffer();\r\n    render_gl.bindBuffer(render_gl.ELEMENT_ARRAY_BUFFER, ebo);\r\n    render_gl.bufferData(render_gl.ELEMENT_ARRAY_BUFFER, indices, render_gl.STATIC_DRAW);\r\n    terrain.ctr = idx.length;\r\n\r\n    // water\r\n    water.vao = render_gl.createVertexArray();\r\n    render_gl.bindVertexArray(water.vao);\r\n\r\n    v = waterObj.v;\r\n    vn = waterObj.vn;\r\n    vt = waterObj.vt;\r\n    idx = waterObj.idx;\r\n\r\n    let positions2 = new Float32Array(v);\r\n    let normals2 = new Float32Array(vn);\r\n    let texcoords2 = new Float32Array(vt);\r\n\r\n    let vbo2 = render_gl.createBuffer();\r\n    render_gl.bindBuffer(render_gl.ARRAY_BUFFER, vbo2);\r\n    render_gl.bufferData(render_gl.ARRAY_BUFFER, positions2.byteLength + normals2.byteLength + texcoords2.byteLength, render_gl.STATIC_DRAW);\r\n    render_gl.bufferSubData(render_gl.ARRAY_BUFFER, 0, positions2);\r\n    render_gl.bufferSubData(render_gl.ARRAY_BUFFER, positions2.byteLength, normals2);\r\n    render_gl.bufferSubData(render_gl.ARRAY_BUFFER, positions2.byteLength + normals2.byteLength, texcoords2);\r\n\r\n    render_gl.vertexAttribPointer(0, 3, render_gl.FLOAT, false, 0, 0);\r\n    render_gl.enableVertexAttribArray(0);\r\n    render_gl.vertexAttribPointer(1, 3, render_gl.FLOAT, false, 0, positions2.byteLength);\r\n    render_gl.enableVertexAttribArray(1);\r\n    render_gl.vertexAttribPointer(2, 2, render_gl.FLOAT, false, 0, positions2.byteLength + normals2.byteLength);\r\n    render_gl.enableVertexAttribArray(2);\r\n\r\n    let indices2 = new Uint32Array(idx);\r\n    let ebo2 = render_gl.createBuffer();\r\n    render_gl.bindBuffer(render_gl.ELEMENT_ARRAY_BUFFER, ebo2);\r\n    render_gl.bufferData(render_gl.ELEMENT_ARRAY_BUFFER, indices2, render_gl.STATIC_DRAW);\r\n    water.ctr = idx.length;\r\n\r\n    // free array\r\n    v.length = 0;\r\n    vn.length = 0;\r\n    vt.length = 0;\r\n    idx.length = 0;\r\n    tn.length = 0;\r\n    vc.length = 0;\r\n\r\n    render_gl.bindVertexArray(null);\r\n    return true;\r\n}\r\n\r\nasync function loadAsset() {\r\n    // obj\r\n    let retTerrain = await loadTerrain();\r\n\r\n    // texture\r\n    let promises = [];\r\n    skybox.tex_cubemap_path.forEach(path => {   // 0~5\r\n        promises.push(loadImage(path));\r\n    });\r\n    promises.push(loadImage(\'./asset/atlas2.png\')); // 6\r\n    promises.push(loadImage(\'./asset/atlas2_n.png\'));  // 7\r\n    promises.push(loadImage(\'./asset/atlas3.png\')); // 8\r\n    promises.push(loadImage(\'./asset/atlas3_n.png\'));  // 9\r\n    promises.push(loadImage(\'./asset/water_still.png\'));  // 10\r\n    promises.push(loadImage(\'./asset/noisy-texture.png\'));  // 11\r\n    let results = await Promise.all(promises);\r\n\r\n    render_gl.activeTexture(render_gl.TEXTURE0);\r\n\r\n    for(let i = 0; i < 4; i++){\r\n        terrain.tex[i] = render_gl.createTexture();\r\n        render_gl.bindTexture(render_gl.TEXTURE_2D, terrain.tex[i]);\r\n        render_gl.texImage2D(render_gl.TEXTURE_2D, 0, render_gl.RGBA, render_gl.RGBA, render_gl.UNSIGNED_BYTE, results[6 + i]);\r\n        render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_WRAP_S, render_gl.REPEAT);\r\n        render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_WRAP_T, render_gl.REPEAT);\r\n        render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_MIN_FILTER, render_gl.NEAREST);\r\n        render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_MAG_FILTER, render_gl.NEAREST);\r\n    }\r\n\r\n    water.tex[0] = render_gl.createTexture();\r\n    render_gl.bindTexture(render_gl.TEXTURE_2D, water.tex[0]);\r\n    render_gl.texImage2D(render_gl.TEXTURE_2D, 0, render_gl.RGBA, render_gl.RGBA, render_gl.UNSIGNED_BYTE, results[10]);\r\n    render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_WRAP_S, render_gl.REPEAT);\r\n    render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_WRAP_T, render_gl.REPEAT);\r\n    render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_MIN_FILTER, render_gl.NEAREST);\r\n    render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_MAG_FILTER, render_gl.NEAREST);\r\n\r\n\r\n    skylight.tex_noise = render_gl.createTexture();\r\n    render_gl.bindTexture(render_gl.TEXTURE_2D, skylight.tex_noise);\r\n    render_gl.texImage2D(render_gl.TEXTURE_2D, 0, render_gl.RGBA, render_gl.RGBA, render_gl.UNSIGNED_BYTE, results[11]);\r\n    render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_WRAP_S, render_gl.REPEAT);\r\n    render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_WRAP_T, render_gl.REPEAT);\r\n    render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_MIN_FILTER, render_gl.LINEAR);\r\n    render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_MAG_FILTER, render_gl.LINEAR);\r\n\r\n\r\n\r\n\r\n    createSkyboxTexture(render_gl, results);\r\n\r\n\r\n    results.length = 0;\r\n}\r\n\r\nfunction render(time) {\r\n    // update time\r\n    if (!render_global.start) {\r\n        render_global.start = time;\r\n    }\r\n    // in milliseconds\r\n    let delta = time - render_global.start;\r\n    render_global.start = time;\r\n\r\n    \r\n    if(!skylight.time_pause){\r\n        addSkylightTime(delta / 100.0);\r\n    }\r\n    \r\n\r\n    stats.update();\r\n\r\n    cameraMove();\r\n    recalculateViewMatrix(render_matrix.v);\r\n\r\n    let mvp = esm["mat4"].create();\r\n    let smvp = esm["mat4"].create();\r\n\r\n    //========================shadow pass========================\r\n    for (var i = 0; i < 3; i++) {\r\n        render_gl.bindFramebuffer(render_gl.FRAMEBUFFER, render_frames[i].fbo);\r\n\r\n        render_gl.viewport(0, 0, render_gl.drawingBufferWidth * 4, render_gl.drawingBufferHeight * 4);\r\n        render_gl.clear(render_gl.COLOR_BUFFER_BIT | render_gl.DEPTH_BUFFER_BIT);\r\n\r\n        render_gl.useProgram(shadowMap.program);\r\n\r\n        render_gl.enable(render_gl.POLYGON_OFFSET_FILL);\r\n        render_gl.polygonOffset(4.0, 4.0);\r\n\r\n        esm["mat4"].multiply(smvp, light_matrices[i], render_matrix.m);\r\n        render_gl.uniformMatrix4fv(shadowMap.mvpLocation, false, smvp);\r\n\r\n        render_gl.bindVertexArray(terrain.vao);\r\n        render_gl.drawElements(render_gl.TRIANGLES, terrain.ctr, render_gl.UNSIGNED_INT, 0);\r\n\r\n        render_gl.disable(render_gl.POLYGON_OFFSET_FILL);\r\n    }\r\n    //======================= shadow pass =======================\r\n\r\n    //======================== main pass ========================\r\n    render_gl.bindFramebuffer(render_gl.FRAMEBUFFER, postProcessing.fbo);\r\n    render_gl.viewport(0, 0, render_gl.drawingBufferWidth, render_gl.drawingBufferHeight);\r\n    render_gl.clear(render_gl.COLOR_BUFFER_BIT | render_gl.DEPTH_BUFFER_BIT);\r\n    \r\n    // drawAtmosphere(gl, matrix, global.program);\r\n    \r\n    render_gl.useProgram(render_global.program);\r\n\r\n    render_gl.activeTexture(render_gl.TEXTURE0);\r\n    render_gl.bindTexture(render_gl.TEXTURE_2D, terrain.tex[0 + highResolutionOffset]);\r\n    render_gl.activeTexture(render_gl.TEXTURE1);\r\n    render_gl.bindTexture(render_gl.TEXTURE_2D, terrain.tex[1 + highResolutionOffset]);\r\n    render_gl.activeTexture(render_gl.TEXTURE3);\r\n    render_gl.bindTexture(render_gl.TEXTURE_2D, shadowMap.depthTex[0]);\r\n    render_gl.activeTexture(render_gl.TEXTURE4);\r\n    render_gl.bindTexture(render_gl.TEXTURE_2D, shadowMap.depthTex[1]);\r\n    render_gl.activeTexture(render_gl.TEXTURE5);\r\n    render_gl.bindTexture(render_gl.TEXTURE_2D, shadowMap.depthTex[2]);\r\n\r\n\r\n    esm["mat4"].multiply(mvp, render_matrix.p, render_matrix.v);\r\n    esm["mat4"].multiply(mvp, mvp, render_matrix.m);\r\n    render_gl.uniformMatrix4fv(uniform.mvp, false, mvp);\r\n    render_gl.uniformMatrix4fv(uniform.m, false, render_matrix.m);\r\n    render_gl.uniform3fv(uniform.eye, camera.eye);\r\n    render_gl.uniform3fv(uniform.light, skylight.eye);\r\n    render_gl.uniform1i(uniform.useShadow, 1);\r\n    \r\n    render_gl.uniform3fv(render_gl.getUniformLocation(render_global.program, \'light_color\'), skylight.color);\r\n    render_gl.uniform1i(render_gl.getUniformLocation(render_global.program, "usePreCalSunColor"), skylight.usePreCalSunColor);\r\n\r\n\r\n\r\n    // csm range\r\n    render_gl.uniform1f(uniform.csmRange[0], csm_range_c[0]);\r\n    render_gl.uniform1f(uniform.csmRange[1], csm_range_c[1]);\r\n    render_gl.uniform1f(uniform.csmRange[2], csm_range_c[2]);\r\n\r\n    render_gl.uniform1i(uniform.depthBufferLocation[0], 3);\r\n    render_gl.uniform1i(uniform.depthBufferLocation[1], 4);\r\n    render_gl.uniform1i(uniform.depthBufferLocation[2], 5);\r\n\r\n    render_gl.uniformMatrix4fv(uniform.uL[0], false, light_matrices[0]);\r\n    render_gl.uniformMatrix4fv(uniform.uL[1], false, light_matrices[1]);\r\n    render_gl.uniformMatrix4fv(uniform.uL[2], false, light_matrices[2]);\r\n\r\n    render_gl.uniformMatrix4fv(uniform.shadowMVPLocation, false, smvp);\r\n    render_gl.uniform1f(uniform.biasLocation, skylight.bias);\r\n\r\n    render_gl.bindVertexArray(terrain.vao);\r\n    render_gl.drawElements(render_gl.TRIANGLES, terrain.ctr, render_gl.UNSIGNED_INT, 0);\r\n\r\n    // drawSkybox(gl, matrix, global.program);\r\n    drawAtmosphere(render_gl, render_matrix, render_global.program);\r\n    \r\n    //======================== main pass ========================\r\n\r\n    //======================= water pass ========================\r\n    render_gl.enable(render_gl.BLEND);\r\n    render_gl.blendFuncSeparate(render_gl.SRC_ALPHA, render_gl.ONE_MINUS_SRC_ALPHA, render_gl.ZERO, render_gl.ONE);\r\n    render_gl.useProgram(water.program);\r\n\r\n    render_gl.activeTexture(render_gl.TEXTURE0);\r\n    render_gl.bindTexture(render_gl.TEXTURE_2D, water.tex[0]);\r\n\r\n    render_gl.uniformMatrix4fv(water.mvp, false, mvp);\r\n    render_gl.uniformMatrix4fv(water.m, false, render_matrix.m);\r\n    render_gl.uniform3fv(water.light, skylight.eye);\r\n    render_gl.uniform3fv(water.eye, camera.eye);\r\n    render_gl.uniform1f(water.texOffset, Math.floor(time / 64) % 32);\r\n\r\n    render_gl.bindVertexArray(water.vao);\r\n    render_gl.drawElements(render_gl.TRIANGLES, water.ctr, render_gl.UNSIGNED_INT, 0);\r\n\r\n    render_gl.disable(render_gl.BLEND);\r\n    //======================= water pass ========================\r\n\r\n\r\n    //===================== post processing =====================\r\n    render_gl.bindFramebuffer(render_gl.FRAMEBUFFER, null);\r\n    render_gl.clear(render_gl.COLOR_BUFFER_BIT | render_gl.DEPTH_BUFFER_BIT);\r\n    render_gl.useProgram(postProcessing.program);\r\n\r\n    render_gl.activeTexture(render_gl.TEXTURE0);\r\n    render_gl.bindTexture(render_gl.TEXTURE_2D, postProcessing.mainTexture);\r\n    render_gl.uniform1i(postProcessing.mainTexLocation, 0);\r\n    render_gl.activeTexture(render_gl.TEXTURE1);\r\n    render_gl.bindTexture(render_gl.TEXTURE_2D, postProcessing.depthTexture);\r\n    render_gl.uniform1i(postProcessing.depthTexLocation, 1);\r\n\r\n    render_gl.uniform2fv(postProcessing.resolutionLocation, esm["vec2"].fromValues(render_gl.drawingBufferWidth, render_gl.drawingBufferHeight));\r\n\r\n    render_gl.bindVertexArray(postProcessing.vao);\r\n\r\n    render_gl.drawElements(render_gl.TRIANGLES, 6, render_gl.UNSIGNED_INT, 0);\r\n    //===================== post processing =====================\r\n}\r\n\r\nfunction initPostProcessingTexture() {\r\n    render_gl.bindFramebuffer(render_gl.FRAMEBUFFER, postProcessing.fbo);\r\n\r\n    render_gl.deleteTexture(postProcessing.mainTexture);\r\n    render_gl.deleteTexture(postProcessing.depthTexture);\r\n    render_gl.deleteRenderbuffer(postProcessing.depthBuffer);\r\n\r\n    render_gl.activeTexture(render_gl.TEXTURE0);\r\n\r\n    postProcessing.mainTexture = render_gl.createTexture();\r\n    render_gl.bindTexture(render_gl.TEXTURE_2D, postProcessing.mainTexture)\r\n    render_gl.pixelStorei(render_gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_MAG_FILTER, render_gl.NEAREST);\r\n    render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_MIN_FILTER, render_gl.NEAREST);\r\n    render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_WRAP_S, render_gl.MIRRORED_REPEAT);\r\n    render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_WRAP_T, render_gl.MIRRORED_REPEAT);\r\n    render_gl.texStorage2D(render_gl.TEXTURE_2D, 1, render_gl.RGBA32F, render_gl.drawingBufferWidth, render_gl.drawingBufferHeight);\r\n    render_gl.framebufferTexture2D(render_gl.FRAMEBUFFER, render_gl.COLOR_ATTACHMENT0, render_gl.TEXTURE_2D, postProcessing.mainTexture, 0);\r\n\r\n    postProcessing.depthTexture = render_gl.createTexture();\r\n    render_gl.bindTexture(render_gl.TEXTURE_2D, postProcessing.depthTexture)\r\n    render_gl.pixelStorei(render_gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_MAG_FILTER, render_gl.NEAREST);\r\n    render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_MIN_FILTER, render_gl.NEAREST);\r\n    render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_WRAP_S, render_gl.MIRRORED_REPEAT);\r\n    render_gl.texParameteri(render_gl.TEXTURE_2D, render_gl.TEXTURE_WRAP_T, render_gl.MIRRORED_REPEAT);\r\n    render_gl.texStorage2D(render_gl.TEXTURE_2D, 1, render_gl.RGBA32F, render_gl.drawingBufferWidth, render_gl.drawingBufferHeight);\r\n    render_gl.framebufferTexture2D(render_gl.FRAMEBUFFER, render_gl.COLOR_ATTACHMENT1, render_gl.TEXTURE_2D, postProcessing.depthTexture, 0);\r\n\r\n    postProcessing.depthBuffer = render_gl.createRenderbuffer();\r\n    render_gl.bindRenderbuffer(render_gl.RENDERBUFFER, postProcessing.depthBuffer);\r\n    render_gl.renderbufferStorage(render_gl.RENDERBUFFER, render_gl.DEPTH_COMPONENT32F, render_gl.drawingBufferWidth, render_gl.drawingBufferHeight);\r\n    render_gl.framebufferRenderbuffer(render_gl.FRAMEBUFFER, render_gl.DEPTH_ATTACHMENT, render_gl.RENDERBUFFER, postProcessing.depthBuffer);\r\n\r\n    // gl.texImage2D(gl.TEXTURE_2D, 0, gl.DEPTH_COMPONENT32F, gl.drawingBufferWidth, gl.drawingBufferHeight, 0, gl.DEPTH_COMPONENT, gl.FLOAT, null);\r\n    // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    // gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depthBuffer, 0);\r\n\r\n    render_gl.drawBuffers([render_gl.COLOR_ATTACHMENT0, render_gl.COLOR_ATTACHMENT1]);\r\n\r\n    render_gl.bindFramebuffer(render_gl.FRAMEBUFFER, null);\r\n}\r\n\r\nfunction resize() {\r\n    let canvas = document.querySelector(\'canvas\');\r\n\r\n    if (render_gl && canvas) {\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n        // glm.mat4.perspective(matrix.p, Math.PI * 0.7, gl.drawingBufferWidth / gl.drawingBufferHeight, 0.1, 20000.0);\r\n        esm["mat4"].perspective(render_matrix.p, Math.PI * camera.FOV / 180.0, render_gl.drawingBufferWidth / render_gl.drawingBufferHeight, camera.near, camera.far);\r\n        render_gl.viewport(0, 0, render_gl.drawingBufferWidth, render_gl.drawingBufferHeight);\r\n\r\n        initPostProcessingTexture();\r\n        shadowFrameBufferSetup();\r\n    }\r\n}\n// CONCATENATED MODULE: ./main.js\n\r\n\r\n\r\nfunction animate(time) {\r\n\r\n    render(time);\r\n\r\n    window.requestAnimationFrame(animate);\r\n}\r\n\r\nwindow.onresize = () => {\r\n    resize();\r\n}\r\n\r\nwindow.onload = () => {\r\n    initWebGL();\r\n    //createShader();\r\n    loadAsset().then(() => {\r\n        // rendering loop\r\n        window.requestAnimationFrame(animate);\r\n    });\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n')}]);